<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:googleplay="http://www.google.com/schemas/play-podcasts/1.0" xmlns:media="http://www.rssboard.org/media-rss" version="2.0">
  <channel>
    <title><![CDATA[在下莫老师 玩 3C[YT+]]]></title>
    <link>http://www.youtube.com/feeds/videos.xml?channel_id=UCAbLQp7cSr_hdPfr_Pe1S_g</link>
    <image>
      <url>https://yt3.googleusercontent.com/NK_L44Nak-8U92n1aulEDAH16BVBiRf52VHuVlgQtWEseHHD3ca9zaZDNf8i24-S_1zKAdBR=s900-b50-c-k-c0x008A95A5-no-rj</url>
      <title>在下莫老师 玩 3C[YT+]</title>
      <link>http://www.youtube.com/feeds/videos.xml?channel_id=UCAbLQp7cSr_hdPfr_Pe1S_g</link>
    </image>
    <language>en-us</language>
    <atom:link href="https://www.youtube.com/feeds/videos.xml?channel_id=UCAbLQp7cSr_hdPfr_Pe1S_g" rel="self" type="application/rss+xml"/>
    <copyright><![CDATA[在下莫老师 玩 3C[YT+]]]></copyright>
    <itunes:author><![CDATA[在下莫老师 玩 3C[YT+]]]></itunes:author>
    <itunes:summary>
      <![CDATA[
      <a href="https://www.youtube.com/channel/UCAbLQp7cSr_hdPfr_Pe1S_g" target="_blank">https://www.youtube.com/channel/UCAbLQp7cSr_hdPfr_Pe1S_g</a><br />
<br />
<a href="https://www.youtube.com/feeds/videos.xml?channel_id=UCAbLQp7cSr_hdPfr_Pe1S_g" target="_blank">https://www.youtube.com/feeds/videos.xml?channel_id=UCAbLQp7cSr_hdPfr_Pe1S_g</a>
      ]]>
    </itunes:summary>
    <description>
      <![CDATA[
      <a href="https://www.youtube.com/channel/UCAbLQp7cSr_hdPfr_Pe1S_g" target="_blank">https://www.youtube.com/channel/UCAbLQp7cSr_hdPfr_Pe1S_g</a><br />
<br />
<a href="https://www.youtube.com/feeds/videos.xml?channel_id=UCAbLQp7cSr_hdPfr_Pe1S_g" target="_blank">https://www.youtube.com/feeds/videos.xml?channel_id=UCAbLQp7cSr_hdPfr_Pe1S_g</a>
      ]]>
    </description>
    <itunes:owner>
      <itunes:name><![CDATA[在下莫老师 玩 3C[YT+]]]></itunes:name>
    </itunes:owner>
    <itunes:image href="https://yt3.googleusercontent.com/NK_L44Nak-8U92n1aulEDAH16BVBiRf52VHuVlgQtWEseHHD3ca9zaZDNf8i24-S_1zKAdBR=s900-b50-c-k-c0x008A95A5-no-rj"/>
<item>
      <title><![CDATA[在PC上优雅的运行Android和Linux应用，OpenFDE安装使用指南]]></title>
      <link>https://www.youtube.com/watch?v=3AVyT5OBw6M</link>
      <itunes:title><![CDATA[在PC上优雅的运行Android和Linux应用，OpenFDE安装使用指南]]></itunes:title>
      <itunes:author><![CDATA[在下莫老师]]></itunes:author>
      <itunes:summary>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/3AVyT5OBw6M/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=3AVyT5OBw6M">https://www.youtube.com/watch?v=3AVyT5OBw6M</a></p><h1>值得閱讀的理由</h1> <ul> <li>深入了解 <strong>OpenFDE</strong>，一個將 <strong>Android</strong> 與 <strong>Linux</strong> 系統無縫整合的開源桌面，探索其獨特運作模式。</li> <li>掌握在 <strong>X86電腦</strong> 上從零開始部署 <strong>OpenFDE</strong> 的詳細步驟，包括系統準備、安裝與應用程式配置。</li> <li>預先了解 <strong>OpenFDE</strong> 在實際使用中可能遇到的 <strong>兼容性</strong> 問題與限制，避免踩雷，特別是在 <strong>X86</strong> 硬體上的體驗。</li> </ul> <hr /> <h1>摘要</h1> <p>這段影片由作者介紹了 <strong>OpenFDE</strong>，一個旨在將 <strong>Android</strong> 和 <strong>Linux</strong> 架構整合，讓使用者能在同一個桌面環境中方便使用兩種系統軟體的 <strong>Linux開源桌面</strong>。作者解釋了 <strong>OpenFDE</strong> 與 <strong>WayDroid</strong> 的不同之處：<strong>WayDroid</strong> 是在 <strong>Linux桌面環境</strong> 上運行 <strong>Android</strong> 應用，而 <strong>OpenFDE</strong> 則是在 <strong>AOSP桌面環境</strong> 上透過 <strong>X11</strong> 運行 <strong>Linux</strong> 應用，其使用邏輯更接近 <strong>Android</strong>。為了帶領觀眾從無到有部署 <strong>OpenFDE</strong> 並進行兼容性測試，作者從 <strong>X86電腦</strong> 上的安裝過程開始講解。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_26.jpg" /></p> <hr /> <h2>安裝前的準備工作</h2> <p>首先，作者列出了部署 <strong>OpenFDE</strong> 所需的準備：一台至少 <strong>8GB記憶體</strong> 的 <strong>X86電腦</strong>、一個 <strong>16GB以上</strong> 的 <strong>U盤</strong>、指定版本 <strong>Ubuntu 22.04 ISO系統映像檔</strong>（無論Server版或Desktop版，作者選擇Server版進行演示）、用於敲命令的 <strong>MobaXterm</strong>，以及用於寫入映像檔的 <strong>BalenaEtcher</strong>。作者強調，影片中涉及到的命令都將在附件中提供，無需記憶。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_65.jpg" /></p> <hr /> <h2>Ubuntu伺服器版系統部署</h2> <p>準備完成後，作者開始演示 <strong>Ubuntu 22.04 Server版</strong> 的安裝過程。首先使用 <strong>BalenaEtcher</strong> 將 <strong>Ubuntu</strong> 系統映像檔燒錄到 <strong>U盤</strong>。隨後，將 <strong>U盤</strong> 插入目標電腦並選擇從 <strong>U盤啟動</strong>。在安裝介面中，作者選擇英文語系（Server版預設無中文）、不更新系統、預設鍵盤布局、標準安裝模式，並提示觀眾要記下自動獲取的 <strong>IP地址</strong>。接著，將系統默認的鏡像源更換為國內源以加快更新速度，選擇安裝磁碟、輸入<strong>使用者名</strong>和<strong>密碼</strong>，並勾選安裝 <strong>SSH Server</strong>。完成這些設定後，系統便開始安裝，最後一步的系統升級會耗時較久。安裝成功後，系統會提示重啟並拔掉 <strong>U盤</strong>，然後即可進入 <strong>Ubuntu</strong> 登錄介面。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_202.jpg" /></p> <hr /> <h2>OpenFDE桌面環境安裝</h2> <p>由於 <strong>Ubuntu Server版</strong> 沒有圖形介面，作者建議使用 <strong>SSH</strong> 進行後續操作。觀眾需在同區域網路內的另一台電腦上，透過 <strong>MobaXterm</strong> 連接到 <strong>Ubuntu</strong> 的 <strong>SSH後台</strong>（輸入 <strong>Ubuntu的IP地址</strong>、<strong>使用者名稱</strong>和<strong>密碼</strong>）。連線成功後，只需複製並貼上 <strong>OpenFDE的一鍵安裝命令</strong> 即可開始安裝，過程中會要求再次輸入系統密碼。安裝過程可能在綠條處卡頓較久，但作者提醒不必慌張，等待即可。當看到提示後按下回車，即表示 <strong>OpenFDE</strong> 安裝成功。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_270.jpg" /></p> <hr /> <h2>為X86設備配置Android應用轉譯</h2> <p>對於 <strong>X86設備</strong> 而言，若要運行 <strong>Arm架構的Android應用</strong>，則需要進行轉譯。如果是在 <strong>Arm設備</strong> 上部署（例如樹莓派），則可跳過此步驟。作者首先克隆了 <strong>Waydroid_script</strong> 的倉庫，並切換至腳本目錄。在設置虛擬環境時，若提示缺少 <strong>Python</strong>，則需先以管理員權限安裝 <strong>Python</strong>。接著再次設置虛擬環境並安裝所需依賴。最後，運行 <strong>Waydroid_script</strong> 腳本，選擇 <strong>Android 11</strong> 版本和「Install」。作者特別提醒，在選擇安裝內容時，務必 <strong>只安裝libhoudini轉譯層</strong>，而應 <strong>避免安裝Magisk和SmartDock</strong>，因為它們可能導致系統無限彈窗等問題。安裝完成後，輸入 <code>reboot</code> 命令重啟系統。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_410.jpg" /></p> <hr /> <h2>OpenFDE初體驗與兼容性測試</h2> <p>重啟系統後，<strong>Ubuntu</strong> 意外地出現了圖形介面。觀眾需選擇使用者，並在右下角將桌面環境切換至 <strong>FDE</strong>，然後輸入密碼即可進入 <strong>OpenFDE桌面</strong>。至此，整個安裝流程完成。然而，作者在實際體驗 <strong>OpenFDE</strong> 時遇到了一系列問題：剛進入系統，便彈出了 <strong>X11崩潰</strong> 的窗口，這讓他預感不佳。雖然桌面與 <strong>Android</strong> 介面相似，且部分應用能正常打開，但 <strong>應用閃退</strong> 的問題頻繁發生。更為棘手的是，桌面不支援 <strong>手勢操作</strong>，導致在應用全屏時難以返回桌面（需右鍵調出菜單才能找到返回按鈕）。此外，<strong>OpenFDE</strong> 不支援 <strong>界面縮放</strong>，未能適配高分屏，導致作者不得不使用 <strong>1080P</strong> 的採集卡錄製。最令作者失望的是，由於開局 <strong>X11崩潰</strong>，導致 <strong>Linux應用完全無法使用</strong>，使得 <strong>OpenFDE</strong> 主打的 <strong>Android和Linux同時使用</strong> 的核心功能殘廢，極大影響了使用者體驗。作者推測這可能是由於其 <strong>AMD主機</strong> 的緣故，並建議在 <strong>Arm設備</strong> 上（如樹莓派）的兼容性表現可能會更好。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_8.jpg" /></p> <hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">OpenFDE. 是一个无缝融合了Android和Linux。的Linux开源桌面。它将ASOP和Linux架构。进行了整合。让你可以在同一个桌面上。方便的使用Android。和Linux软件。啊。听起来似乎非常香啊。OpenFDE支持非常多的设备。可以在很多的现有。Linux发行版本上。直接安装。当然。也支持在普通的X86电脑上安装。和我之前讲过的WayDroid很像。不过WayDroid。是在Linux桌面环境上。跑Android应用。而OpenFDE。则是在ASOP桌面环境上。通过X11跑Linux应用。虽然像。但底层其实是不一样的。OpenFDE的使用逻辑。更接近Android一些。所以今天。我将从无到有。带你在一台X86电脑上。部署OpenFDE。并对它的兼容性进行测试。那么话不多说。欢迎来到。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我们需要一台X86电脑。至少8G内存以上。一个U盘。容量16G以上。用来装系统。Ubuntu22.04 iSO系统镜像。之所以要要指定版本。是因为当前OpenFDE。仅支持在这个版本部署啊。Server版和Desktop版。都可以。这里我会用Server版本来做演示。因为之前桌面版已经装过很多次了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_67.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">这次换点不一样的。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">MobaXterm. 用来敲命令。BalenaEtcher. 老工具人了。用来写盘。本期视频会涉及到一些命令。不用记。附件表里都有。那么按照国际惯例。这些东西我都已经放在了视频末尾。点个赞。快去看看吧。准备完成后。接下来是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">将U盘插入电脑。打开BalenaEtcher。点击从文件烧录。选择你下载的Ubuntu系统镜像。接着点击目标磁盘。选择你的U盘。确定。点击烧录。镜像就开始写入了。稍等片刻。即可写入成功。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">写入完成后。我们拔出U盘。插到需要装系统的电脑上。选择从U盘启动。稍等它跑会儿代码。即可来到Ubuntu的安装界面。按上下键移动光标。空格键选中。回车键确认。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第一页语言。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">由于Server版默认是没有中文的。这里我们就直接选英文了。回车。这里是问你要不要更新系统啊。现在更不更都可以。这里我就选择第二项不更新了。这样快点。回车。问你要用哪种键盘布局。默认即可。回车。问你采用哪种安装方式。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第一个是标准安装。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第二个是最小化安装。默认即可。回车。这里是配置网络的界面。如果你插了网线。这里会自动识别并获取到。路由器分配的IP。如果没插网线。可以自己手动连接下WIFI。注意。这个IP地址要记一下。等下要用。回车。问你要不要配置代理。这个不用。回车。配置镜像源。这里我们需要将系统的默认源。换成国内的啊。不然等下更新的时候会巨慢。以清华大学源为例。手动敲一下。敲完选择Done。回车。问你要把系统装到哪个盘。我这里只有一块硬盘。如果你有多块硬盘。注意不要选错了。选择Done。回车。确认一下。回车。警告你接下来的操作会。清除硬盘所有数据。现在备份还来得及。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">选择Continue。回车。接着它会要求我们输入用户名。设备名。确认用户名。密码。确认密码。这个用户名和密码要记住。等下要用。输完选Done。按回车。问我们要不要SSH server。这个肯定要的。空格勾选。再选Done。回车。问我们要不要装一些预装软件。这个看你需要。如果看不懂。那就直接拉到最后的Done。按回车。接着系统就开始安装了。最后一步是系统升级。这一步会比较久。大概要等十多分钟。看到这个就表示安装完成了。我们选择最下边的重启。回车。它会提示我们拔掉U盘。我们拔出U盘。按回车。然后系统会重启。看到这个。按下回车。如果出现登录提示。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">就表示系统已经启动成功了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_193.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第二步。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">由于Server版的Ububtu。没有图形界面。要在这个界面去敲命令。那真的太傻了。所以下边我们会使用SSH。来完成接下来的操作。打开同局域网内的。任意一台电脑上的。MobaXterm. 左上角Session。弹出的框框点SSH。Remote Host填。Ubuntu的IP地址。用户名勾上。这个是你自己设置的啊。完了点OK。输入密码。注意输的时候不会显示。回车。即可进入Ubuntu的SSH后台。接下来我们只需要右键粘贴。OpenFDE的一键安装命令。然后按回车。即可开始安装。这里它还会让我们输一次。系统密码啊。输完按回车。就开始正式安装了。安装过程中可能会在这个。绿条这儿卡很久啊。这1%我等了7分多钟才动。卡住了不要慌。没死机。等就完事儿了。看到这个的时候按下回车。OpenFDE就安装成功了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第三步。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">由于我们是X86设备。想要运行Arm架构的安卓应用。需要转译。就有了这一步。如果你是在Arm设备上部署的OpenFDE。例如树莓派这种。可以跳过这一步。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先我们来克隆下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Waydroid_script的仓库。粘贴这行命令。回车。接着切换至脚本目录。粘贴这行命令回车。接着我们来设置虚拟环境。粘贴这行命令回车。它提示我们设置环境需要python。而我们没装python啊。没关系。根据它的提示。我们安装下python即可。复制这行命令。粘贴回车。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_269.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">报错。是因为权限不足啊。我们在命令前加上sudo。回车。输入密码。以管理员权限安装。就能装上了。这里输入y。回车。看到这个。再按下回车。接着我们再次粘贴刚刚的。设置虚拟环境命令回车。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">这次就能正常设置了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">然后我们还需要安装下依赖。粘贴这行命令回车。等待它装好。最后我们粘贴这行命令。即可运行Waydroid_scrip脚本。这里让选Android版本。我们是11啊。直接回车。然后选第一项。Install. 回车。里边这些东西。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">除了libhoudini这个转译层。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">其余的。都别装。比如magisk。装了也打不开。还有这个smartdock。装了系统会无限弹窗。啊非常鬼畜。所以就只装转译即可。空格选择。然后按回车。这里因为我已经装过一次了。它直接就显示安装完毕了啊。如果是第一次装。它是有一个下载进度条的。如果没有霍格沃兹环境。这个下载进度会。巨慢。完了。我们输入reboot。回车。重启。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">reboot. 回车。重..</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">诶。还是这个玩意儿好用。重启后进入Ububtu。你会惊讶的发现。诶。系统居然有图像界面了。我们选择用户。然后在右下角切换桌面至FDE。输入密码。回车。即可进入OpenFDE桌面。那么到这里。整个OpenFDE的安装流程就讲完了。接下来。来说说它的。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_342.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先进入系统。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">啪的一声。很快啊。它就跳出了一个崩溃窗口。糊我脸上。X11. 崩了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">诶我怎么有种不好的预感。默认的桌面确实和安卓一毛一样。我安装了一些应用。也能正常打开。但应用崩溃闪退的问题。也蛮频繁的。也不知道是我这台机器。的个例还是咋的。比较难绷的是。它这个桌面居然是不支持。手势操作的。也就是应用全屏后。你没办法左右滑动返回。也没办法上划回到桌面。再加上在全屏使用的时候。系统还贴心的为你隐藏了dock栏。导致我想返回桌面都找不到路子了。不过后边我发现按右键。调菜单的时候。它是会显示dock的。这时候可以点右下角来返回桌面。然后你可能也发现了。本期视频的画质比较糊。这是因为我使用的是一张。1080P的采集卡来录屏。平时我是用的4K的。为啥这期不用4K呢。因为OpenFDE。它不支持界面缩放啊。用4K图标会很小。啊。它并没有适配高分屏。最后是最难绷的部分。因为开局X11就崩了。导致Linux应用没办法使用。也就是说OpenFDE主打的。Android和Linux同时使用。的这个Linux它用不了了。这。直接就残废了呀。用户体验直降50%。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_415.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">以上这些问题。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我不知道是因为我这台。主机是AMD的缘故还是怎么的。反正在我这儿的使用体验。相当拉胯。不知道别的机器怎么样。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">大家可以部署试一下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">或许在Arm的树莓派上。兼容性表现会更好点。那好吧。本期视频就到这里。如果你喜欢我的视频还请别忘了点赞。我是莫老师。我们下期视频见。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=3AVyT5OBw6M">https://www.youtube.com/watch?v=3AVyT5OBw6M</a></p><p>本期编号：EP265</p><p></p><p>莫老师的附件表（快捷键Crtl+F搜索视频标题）：</p><p></p><p>中国：www.在下莫老师.com</p><p>海外：www.zxmls.lol</p><p></p><p>----------------------------------------------------</p><p></p><p>You can click here to download the files</p><p></p><p>www.在下莫老师.com</p><p>www.zxmls.lol</p>]]>
      </itunes:summary>
      <description>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/3AVyT5OBw6M/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=3AVyT5OBw6M">https://www.youtube.com/watch?v=3AVyT5OBw6M</a></p><h1>值得閱讀的理由</h1> <ul> <li>深入了解 <strong>OpenFDE</strong>，一個將 <strong>Android</strong> 與 <strong>Linux</strong> 系統無縫整合的開源桌面，探索其獨特運作模式。</li> <li>掌握在 <strong>X86電腦</strong> 上從零開始部署 <strong>OpenFDE</strong> 的詳細步驟，包括系統準備、安裝與應用程式配置。</li> <li>預先了解 <strong>OpenFDE</strong> 在實際使用中可能遇到的 <strong>兼容性</strong> 問題與限制，避免踩雷，特別是在 <strong>X86</strong> 硬體上的體驗。</li> </ul> <hr /> <h1>摘要</h1> <p>這段影片由作者介紹了 <strong>OpenFDE</strong>，一個旨在將 <strong>Android</strong> 和 <strong>Linux</strong> 架構整合，讓使用者能在同一個桌面環境中方便使用兩種系統軟體的 <strong>Linux開源桌面</strong>。作者解釋了 <strong>OpenFDE</strong> 與 <strong>WayDroid</strong> 的不同之處：<strong>WayDroid</strong> 是在 <strong>Linux桌面環境</strong> 上運行 <strong>Android</strong> 應用，而 <strong>OpenFDE</strong> 則是在 <strong>AOSP桌面環境</strong> 上透過 <strong>X11</strong> 運行 <strong>Linux</strong> 應用，其使用邏輯更接近 <strong>Android</strong>。為了帶領觀眾從無到有部署 <strong>OpenFDE</strong> 並進行兼容性測試，作者從 <strong>X86電腦</strong> 上的安裝過程開始講解。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_26.jpg" /></p> <hr /> <h2>安裝前的準備工作</h2> <p>首先，作者列出了部署 <strong>OpenFDE</strong> 所需的準備：一台至少 <strong>8GB記憶體</strong> 的 <strong>X86電腦</strong>、一個 <strong>16GB以上</strong> 的 <strong>U盤</strong>、指定版本 <strong>Ubuntu 22.04 ISO系統映像檔</strong>（無論Server版或Desktop版，作者選擇Server版進行演示）、用於敲命令的 <strong>MobaXterm</strong>，以及用於寫入映像檔的 <strong>BalenaEtcher</strong>。作者強調，影片中涉及到的命令都將在附件中提供，無需記憶。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_65.jpg" /></p> <hr /> <h2>Ubuntu伺服器版系統部署</h2> <p>準備完成後，作者開始演示 <strong>Ubuntu 22.04 Server版</strong> 的安裝過程。首先使用 <strong>BalenaEtcher</strong> 將 <strong>Ubuntu</strong> 系統映像檔燒錄到 <strong>U盤</strong>。隨後，將 <strong>U盤</strong> 插入目標電腦並選擇從 <strong>U盤啟動</strong>。在安裝介面中，作者選擇英文語系（Server版預設無中文）、不更新系統、預設鍵盤布局、標準安裝模式，並提示觀眾要記下自動獲取的 <strong>IP地址</strong>。接著，將系統默認的鏡像源更換為國內源以加快更新速度，選擇安裝磁碟、輸入<strong>使用者名</strong>和<strong>密碼</strong>，並勾選安裝 <strong>SSH Server</strong>。完成這些設定後，系統便開始安裝，最後一步的系統升級會耗時較久。安裝成功後，系統會提示重啟並拔掉 <strong>U盤</strong>，然後即可進入 <strong>Ubuntu</strong> 登錄介面。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_202.jpg" /></p> <hr /> <h2>OpenFDE桌面環境安裝</h2> <p>由於 <strong>Ubuntu Server版</strong> 沒有圖形介面，作者建議使用 <strong>SSH</strong> 進行後續操作。觀眾需在同區域網路內的另一台電腦上，透過 <strong>MobaXterm</strong> 連接到 <strong>Ubuntu</strong> 的 <strong>SSH後台</strong>（輸入 <strong>Ubuntu的IP地址</strong>、<strong>使用者名稱</strong>和<strong>密碼</strong>）。連線成功後，只需複製並貼上 <strong>OpenFDE的一鍵安裝命令</strong> 即可開始安裝，過程中會要求再次輸入系統密碼。安裝過程可能在綠條處卡頓較久，但作者提醒不必慌張，等待即可。當看到提示後按下回車，即表示 <strong>OpenFDE</strong> 安裝成功。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_270.jpg" /></p> <hr /> <h2>為X86設備配置Android應用轉譯</h2> <p>對於 <strong>X86設備</strong> 而言，若要運行 <strong>Arm架構的Android應用</strong>，則需要進行轉譯。如果是在 <strong>Arm設備</strong> 上部署（例如樹莓派），則可跳過此步驟。作者首先克隆了 <strong>Waydroid_script</strong> 的倉庫，並切換至腳本目錄。在設置虛擬環境時，若提示缺少 <strong>Python</strong>，則需先以管理員權限安裝 <strong>Python</strong>。接著再次設置虛擬環境並安裝所需依賴。最後，運行 <strong>Waydroid_script</strong> 腳本，選擇 <strong>Android 11</strong> 版本和「Install」。作者特別提醒，在選擇安裝內容時，務必 <strong>只安裝libhoudini轉譯層</strong>，而應 <strong>避免安裝Magisk和SmartDock</strong>，因為它們可能導致系統無限彈窗等問題。安裝完成後，輸入 <code>reboot</code> 命令重啟系統。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_410.jpg" /></p> <hr /> <h2>OpenFDE初體驗與兼容性測試</h2> <p>重啟系統後，<strong>Ubuntu</strong> 意外地出現了圖形介面。觀眾需選擇使用者，並在右下角將桌面環境切換至 <strong>FDE</strong>，然後輸入密碼即可進入 <strong>OpenFDE桌面</strong>。至此，整個安裝流程完成。然而，作者在實際體驗 <strong>OpenFDE</strong> 時遇到了一系列問題：剛進入系統，便彈出了 <strong>X11崩潰</strong> 的窗口，這讓他預感不佳。雖然桌面與 <strong>Android</strong> 介面相似，且部分應用能正常打開，但 <strong>應用閃退</strong> 的問題頻繁發生。更為棘手的是，桌面不支援 <strong>手勢操作</strong>，導致在應用全屏時難以返回桌面（需右鍵調出菜單才能找到返回按鈕）。此外，<strong>OpenFDE</strong> 不支援 <strong>界面縮放</strong>，未能適配高分屏，導致作者不得不使用 <strong>1080P</strong> 的採集卡錄製。最令作者失望的是，由於開局 <strong>X11崩潰</strong>，導致 <strong>Linux應用完全無法使用</strong>，使得 <strong>OpenFDE</strong> 主打的 <strong>Android和Linux同時使用</strong> 的核心功能殘廢，極大影響了使用者體驗。作者推測這可能是由於其 <strong>AMD主機</strong> 的緣故，並建議在 <strong>Arm設備</strong> 上（如樹莓派）的兼容性表現可能會更好。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_8.jpg" /></p> <hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">OpenFDE. 是一个无缝融合了Android和Linux。的Linux开源桌面。它将ASOP和Linux架构。进行了整合。让你可以在同一个桌面上。方便的使用Android。和Linux软件。啊。听起来似乎非常香啊。OpenFDE支持非常多的设备。可以在很多的现有。Linux发行版本上。直接安装。当然。也支持在普通的X86电脑上安装。和我之前讲过的WayDroid很像。不过WayDroid。是在Linux桌面环境上。跑Android应用。而OpenFDE。则是在ASOP桌面环境上。通过X11跑Linux应用。虽然像。但底层其实是不一样的。OpenFDE的使用逻辑。更接近Android一些。所以今天。我将从无到有。带你在一台X86电脑上。部署OpenFDE。并对它的兼容性进行测试。那么话不多说。欢迎来到。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我们需要一台X86电脑。至少8G内存以上。一个U盘。容量16G以上。用来装系统。Ubuntu22.04 iSO系统镜像。之所以要要指定版本。是因为当前OpenFDE。仅支持在这个版本部署啊。Server版和Desktop版。都可以。这里我会用Server版本来做演示。因为之前桌面版已经装过很多次了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_67.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">这次换点不一样的。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">MobaXterm. 用来敲命令。BalenaEtcher. 老工具人了。用来写盘。本期视频会涉及到一些命令。不用记。附件表里都有。那么按照国际惯例。这些东西我都已经放在了视频末尾。点个赞。快去看看吧。准备完成后。接下来是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">将U盘插入电脑。打开BalenaEtcher。点击从文件烧录。选择你下载的Ubuntu系统镜像。接着点击目标磁盘。选择你的U盘。确定。点击烧录。镜像就开始写入了。稍等片刻。即可写入成功。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">写入完成后。我们拔出U盘。插到需要装系统的电脑上。选择从U盘启动。稍等它跑会儿代码。即可来到Ubuntu的安装界面。按上下键移动光标。空格键选中。回车键确认。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第一页语言。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">由于Server版默认是没有中文的。这里我们就直接选英文了。回车。这里是问你要不要更新系统啊。现在更不更都可以。这里我就选择第二项不更新了。这样快点。回车。问你要用哪种键盘布局。默认即可。回车。问你采用哪种安装方式。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第一个是标准安装。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第二个是最小化安装。默认即可。回车。这里是配置网络的界面。如果你插了网线。这里会自动识别并获取到。路由器分配的IP。如果没插网线。可以自己手动连接下WIFI。注意。这个IP地址要记一下。等下要用。回车。问你要不要配置代理。这个不用。回车。配置镜像源。这里我们需要将系统的默认源。换成国内的啊。不然等下更新的时候会巨慢。以清华大学源为例。手动敲一下。敲完选择Done。回车。问你要把系统装到哪个盘。我这里只有一块硬盘。如果你有多块硬盘。注意不要选错了。选择Done。回车。确认一下。回车。警告你接下来的操作会。清除硬盘所有数据。现在备份还来得及。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">选择Continue。回车。接着它会要求我们输入用户名。设备名。确认用户名。密码。确认密码。这个用户名和密码要记住。等下要用。输完选Done。按回车。问我们要不要SSH server。这个肯定要的。空格勾选。再选Done。回车。问我们要不要装一些预装软件。这个看你需要。如果看不懂。那就直接拉到最后的Done。按回车。接着系统就开始安装了。最后一步是系统升级。这一步会比较久。大概要等十多分钟。看到这个就表示安装完成了。我们选择最下边的重启。回车。它会提示我们拔掉U盘。我们拔出U盘。按回车。然后系统会重启。看到这个。按下回车。如果出现登录提示。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">就表示系统已经启动成功了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_193.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第二步。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">由于Server版的Ububtu。没有图形界面。要在这个界面去敲命令。那真的太傻了。所以下边我们会使用SSH。来完成接下来的操作。打开同局域网内的。任意一台电脑上的。MobaXterm. 左上角Session。弹出的框框点SSH。Remote Host填。Ubuntu的IP地址。用户名勾上。这个是你自己设置的啊。完了点OK。输入密码。注意输的时候不会显示。回车。即可进入Ubuntu的SSH后台。接下来我们只需要右键粘贴。OpenFDE的一键安装命令。然后按回车。即可开始安装。这里它还会让我们输一次。系统密码啊。输完按回车。就开始正式安装了。安装过程中可能会在这个。绿条这儿卡很久啊。这1%我等了7分多钟才动。卡住了不要慌。没死机。等就完事儿了。看到这个的时候按下回车。OpenFDE就安装成功了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第三步。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">由于我们是X86设备。想要运行Arm架构的安卓应用。需要转译。就有了这一步。如果你是在Arm设备上部署的OpenFDE。例如树莓派这种。可以跳过这一步。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先我们来克隆下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Waydroid_script的仓库。粘贴这行命令。回车。接着切换至脚本目录。粘贴这行命令回车。接着我们来设置虚拟环境。粘贴这行命令回车。它提示我们设置环境需要python。而我们没装python啊。没关系。根据它的提示。我们安装下python即可。复制这行命令。粘贴回车。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_269.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">报错。是因为权限不足啊。我们在命令前加上sudo。回车。输入密码。以管理员权限安装。就能装上了。这里输入y。回车。看到这个。再按下回车。接着我们再次粘贴刚刚的。设置虚拟环境命令回车。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">这次就能正常设置了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">然后我们还需要安装下依赖。粘贴这行命令回车。等待它装好。最后我们粘贴这行命令。即可运行Waydroid_scrip脚本。这里让选Android版本。我们是11啊。直接回车。然后选第一项。Install. 回车。里边这些东西。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">除了libhoudini这个转译层。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">其余的。都别装。比如magisk。装了也打不开。还有这个smartdock。装了系统会无限弹窗。啊非常鬼畜。所以就只装转译即可。空格选择。然后按回车。这里因为我已经装过一次了。它直接就显示安装完毕了啊。如果是第一次装。它是有一个下载进度条的。如果没有霍格沃兹环境。这个下载进度会。巨慢。完了。我们输入reboot。回车。重启。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">reboot. 回车。重..</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">诶。还是这个玩意儿好用。重启后进入Ububtu。你会惊讶的发现。诶。系统居然有图像界面了。我们选择用户。然后在右下角切换桌面至FDE。输入密码。回车。即可进入OpenFDE桌面。那么到这里。整个OpenFDE的安装流程就讲完了。接下来。来说说它的。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_342.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先进入系统。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">啪的一声。很快啊。它就跳出了一个崩溃窗口。糊我脸上。X11. 崩了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">诶我怎么有种不好的预感。默认的桌面确实和安卓一毛一样。我安装了一些应用。也能正常打开。但应用崩溃闪退的问题。也蛮频繁的。也不知道是我这台机器。的个例还是咋的。比较难绷的是。它这个桌面居然是不支持。手势操作的。也就是应用全屏后。你没办法左右滑动返回。也没办法上划回到桌面。再加上在全屏使用的时候。系统还贴心的为你隐藏了dock栏。导致我想返回桌面都找不到路子了。不过后边我发现按右键。调菜单的时候。它是会显示dock的。这时候可以点右下角来返回桌面。然后你可能也发现了。本期视频的画质比较糊。这是因为我使用的是一张。1080P的采集卡来录屏。平时我是用的4K的。为啥这期不用4K呢。因为OpenFDE。它不支持界面缩放啊。用4K图标会很小。啊。它并没有适配高分屏。最后是最难绷的部分。因为开局X11就崩了。导致Linux应用没办法使用。也就是说OpenFDE主打的。Android和Linux同时使用。的这个Linux它用不了了。这。直接就残废了呀。用户体验直降50%。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_415.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">以上这些问题。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我不知道是因为我这台。主机是AMD的缘故还是怎么的。反正在我这儿的使用体验。相当拉胯。不知道别的机器怎么样。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">大家可以部署试一下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">或许在Arm的树莓派上。兼容性表现会更好点。那好吧。本期视频就到这里。如果你喜欢我的视频还请别忘了点赞。我是莫老师。我们下期视频见。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=3AVyT5OBw6M">https://www.youtube.com/watch?v=3AVyT5OBw6M</a></p><p>本期编号：EP265</p><p></p><p>莫老师的附件表（快捷键Crtl+F搜索视频标题）：</p><p></p><p>中国：www.在下莫老师.com</p><p>海外：www.zxmls.lol</p><p></p><p>----------------------------------------------------</p><p></p><p>You can click here to download the files</p><p></p><p>www.在下莫老师.com</p><p>www.zxmls.lol</p>]]>
      </description>
      <content:encoded><![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/3AVyT5OBw6M/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=3AVyT5OBw6M">https://www.youtube.com/watch?v=3AVyT5OBw6M</a></p><h1>值得閱讀的理由</h1> <ul> <li>深入了解 <strong>OpenFDE</strong>，一個將 <strong>Android</strong> 與 <strong>Linux</strong> 系統無縫整合的開源桌面，探索其獨特運作模式。</li> <li>掌握在 <strong>X86電腦</strong> 上從零開始部署 <strong>OpenFDE</strong> 的詳細步驟，包括系統準備、安裝與應用程式配置。</li> <li>預先了解 <strong>OpenFDE</strong> 在實際使用中可能遇到的 <strong>兼容性</strong> 問題與限制，避免踩雷，特別是在 <strong>X86</strong> 硬體上的體驗。</li> </ul> <hr /> <h1>摘要</h1> <p>這段影片由作者介紹了 <strong>OpenFDE</strong>，一個旨在將 <strong>Android</strong> 和 <strong>Linux</strong> 架構整合，讓使用者能在同一個桌面環境中方便使用兩種系統軟體的 <strong>Linux開源桌面</strong>。作者解釋了 <strong>OpenFDE</strong> 與 <strong>WayDroid</strong> 的不同之處：<strong>WayDroid</strong> 是在 <strong>Linux桌面環境</strong> 上運行 <strong>Android</strong> 應用，而 <strong>OpenFDE</strong> 則是在 <strong>AOSP桌面環境</strong> 上透過 <strong>X11</strong> 運行 <strong>Linux</strong> 應用，其使用邏輯更接近 <strong>Android</strong>。為了帶領觀眾從無到有部署 <strong>OpenFDE</strong> 並進行兼容性測試，作者從 <strong>X86電腦</strong> 上的安裝過程開始講解。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_26.jpg" /></p> <hr /> <h2>安裝前的準備工作</h2> <p>首先，作者列出了部署 <strong>OpenFDE</strong> 所需的準備：一台至少 <strong>8GB記憶體</strong> 的 <strong>X86電腦</strong>、一個 <strong>16GB以上</strong> 的 <strong>U盤</strong>、指定版本 <strong>Ubuntu 22.04 ISO系統映像檔</strong>（無論Server版或Desktop版，作者選擇Server版進行演示）、用於敲命令的 <strong>MobaXterm</strong>，以及用於寫入映像檔的 <strong>BalenaEtcher</strong>。作者強調，影片中涉及到的命令都將在附件中提供，無需記憶。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_65.jpg" /></p> <hr /> <h2>Ubuntu伺服器版系統部署</h2> <p>準備完成後，作者開始演示 <strong>Ubuntu 22.04 Server版</strong> 的安裝過程。首先使用 <strong>BalenaEtcher</strong> 將 <strong>Ubuntu</strong> 系統映像檔燒錄到 <strong>U盤</strong>。隨後，將 <strong>U盤</strong> 插入目標電腦並選擇從 <strong>U盤啟動</strong>。在安裝介面中，作者選擇英文語系（Server版預設無中文）、不更新系統、預設鍵盤布局、標準安裝模式，並提示觀眾要記下自動獲取的 <strong>IP地址</strong>。接著，將系統默認的鏡像源更換為國內源以加快更新速度，選擇安裝磁碟、輸入<strong>使用者名</strong>和<strong>密碼</strong>，並勾選安裝 <strong>SSH Server</strong>。完成這些設定後，系統便開始安裝，最後一步的系統升級會耗時較久。安裝成功後，系統會提示重啟並拔掉 <strong>U盤</strong>，然後即可進入 <strong>Ubuntu</strong> 登錄介面。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_202.jpg" /></p> <hr /> <h2>OpenFDE桌面環境安裝</h2> <p>由於 <strong>Ubuntu Server版</strong> 沒有圖形介面，作者建議使用 <strong>SSH</strong> 進行後續操作。觀眾需在同區域網路內的另一台電腦上，透過 <strong>MobaXterm</strong> 連接到 <strong>Ubuntu</strong> 的 <strong>SSH後台</strong>（輸入 <strong>Ubuntu的IP地址</strong>、<strong>使用者名稱</strong>和<strong>密碼</strong>）。連線成功後，只需複製並貼上 <strong>OpenFDE的一鍵安裝命令</strong> 即可開始安裝，過程中會要求再次輸入系統密碼。安裝過程可能在綠條處卡頓較久，但作者提醒不必慌張，等待即可。當看到提示後按下回車，即表示 <strong>OpenFDE</strong> 安裝成功。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_270.jpg" /></p> <hr /> <h2>為X86設備配置Android應用轉譯</h2> <p>對於 <strong>X86設備</strong> 而言，若要運行 <strong>Arm架構的Android應用</strong>，則需要進行轉譯。如果是在 <strong>Arm設備</strong> 上部署（例如樹莓派），則可跳過此步驟。作者首先克隆了 <strong>Waydroid_script</strong> 的倉庫，並切換至腳本目錄。在設置虛擬環境時，若提示缺少 <strong>Python</strong>，則需先以管理員權限安裝 <strong>Python</strong>。接著再次設置虛擬環境並安裝所需依賴。最後，運行 <strong>Waydroid_script</strong> 腳本，選擇 <strong>Android 11</strong> 版本和「Install」。作者特別提醒，在選擇安裝內容時，務必 <strong>只安裝libhoudini轉譯層</strong>，而應 <strong>避免安裝Magisk和SmartDock</strong>，因為它們可能導致系統無限彈窗等問題。安裝完成後，輸入 <code>reboot</code> 命令重啟系統。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_410.jpg" /></p> <hr /> <h2>OpenFDE初體驗與兼容性測試</h2> <p>重啟系統後，<strong>Ubuntu</strong> 意外地出現了圖形介面。觀眾需選擇使用者，並在右下角將桌面環境切換至 <strong>FDE</strong>，然後輸入密碼即可進入 <strong>OpenFDE桌面</strong>。至此，整個安裝流程完成。然而，作者在實際體驗 <strong>OpenFDE</strong> 時遇到了一系列問題：剛進入系統，便彈出了 <strong>X11崩潰</strong> 的窗口，這讓他預感不佳。雖然桌面與 <strong>Android</strong> 介面相似，且部分應用能正常打開，但 <strong>應用閃退</strong> 的問題頻繁發生。更為棘手的是，桌面不支援 <strong>手勢操作</strong>，導致在應用全屏時難以返回桌面（需右鍵調出菜單才能找到返回按鈕）。此外，<strong>OpenFDE</strong> 不支援 <strong>界面縮放</strong>，未能適配高分屏，導致作者不得不使用 <strong>1080P</strong> 的採集卡錄製。最令作者失望的是，由於開局 <strong>X11崩潰</strong>，導致 <strong>Linux應用完全無法使用</strong>，使得 <strong>OpenFDE</strong> 主打的 <strong>Android和Linux同時使用</strong> 的核心功能殘廢，極大影響了使用者體驗。作者推測這可能是由於其 <strong>AMD主機</strong> 的緣故，並建議在 <strong>Arm設備</strong> 上（如樹莓派）的兼容性表現可能會更好。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_8.jpg" /></p> <hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">OpenFDE. 是一个无缝融合了Android和Linux。的Linux开源桌面。它将ASOP和Linux架构。进行了整合。让你可以在同一个桌面上。方便的使用Android。和Linux软件。啊。听起来似乎非常香啊。OpenFDE支持非常多的设备。可以在很多的现有。Linux发行版本上。直接安装。当然。也支持在普通的X86电脑上安装。和我之前讲过的WayDroid很像。不过WayDroid。是在Linux桌面环境上。跑Android应用。而OpenFDE。则是在ASOP桌面环境上。通过X11跑Linux应用。虽然像。但底层其实是不一样的。OpenFDE的使用逻辑。更接近Android一些。所以今天。我将从无到有。带你在一台X86电脑上。部署OpenFDE。并对它的兼容性进行测试。那么话不多说。欢迎来到。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我们需要一台X86电脑。至少8G内存以上。一个U盘。容量16G以上。用来装系统。Ubuntu22.04 iSO系统镜像。之所以要要指定版本。是因为当前OpenFDE。仅支持在这个版本部署啊。Server版和Desktop版。都可以。这里我会用Server版本来做演示。因为之前桌面版已经装过很多次了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_67.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">这次换点不一样的。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">MobaXterm. 用来敲命令。BalenaEtcher. 老工具人了。用来写盘。本期视频会涉及到一些命令。不用记。附件表里都有。那么按照国际惯例。这些东西我都已经放在了视频末尾。点个赞。快去看看吧。准备完成后。接下来是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">将U盘插入电脑。打开BalenaEtcher。点击从文件烧录。选择你下载的Ubuntu系统镜像。接着点击目标磁盘。选择你的U盘。确定。点击烧录。镜像就开始写入了。稍等片刻。即可写入成功。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">写入完成后。我们拔出U盘。插到需要装系统的电脑上。选择从U盘启动。稍等它跑会儿代码。即可来到Ubuntu的安装界面。按上下键移动光标。空格键选中。回车键确认。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第一页语言。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">由于Server版默认是没有中文的。这里我们就直接选英文了。回车。这里是问你要不要更新系统啊。现在更不更都可以。这里我就选择第二项不更新了。这样快点。回车。问你要用哪种键盘布局。默认即可。回车。问你采用哪种安装方式。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第一个是标准安装。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第二个是最小化安装。默认即可。回车。这里是配置网络的界面。如果你插了网线。这里会自动识别并获取到。路由器分配的IP。如果没插网线。可以自己手动连接下WIFI。注意。这个IP地址要记一下。等下要用。回车。问你要不要配置代理。这个不用。回车。配置镜像源。这里我们需要将系统的默认源。换成国内的啊。不然等下更新的时候会巨慢。以清华大学源为例。手动敲一下。敲完选择Done。回车。问你要把系统装到哪个盘。我这里只有一块硬盘。如果你有多块硬盘。注意不要选错了。选择Done。回车。确认一下。回车。警告你接下来的操作会。清除硬盘所有数据。现在备份还来得及。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">选择Continue。回车。接着它会要求我们输入用户名。设备名。确认用户名。密码。确认密码。这个用户名和密码要记住。等下要用。输完选Done。按回车。问我们要不要SSH server。这个肯定要的。空格勾选。再选Done。回车。问我们要不要装一些预装软件。这个看你需要。如果看不懂。那就直接拉到最后的Done。按回车。接着系统就开始安装了。最后一步是系统升级。这一步会比较久。大概要等十多分钟。看到这个就表示安装完成了。我们选择最下边的重启。回车。它会提示我们拔掉U盘。我们拔出U盘。按回车。然后系统会重启。看到这个。按下回车。如果出现登录提示。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">就表示系统已经启动成功了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_193.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第二步。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">由于Server版的Ububtu。没有图形界面。要在这个界面去敲命令。那真的太傻了。所以下边我们会使用SSH。来完成接下来的操作。打开同局域网内的。任意一台电脑上的。MobaXterm. 左上角Session。弹出的框框点SSH。Remote Host填。Ubuntu的IP地址。用户名勾上。这个是你自己设置的啊。完了点OK。输入密码。注意输的时候不会显示。回车。即可进入Ubuntu的SSH后台。接下来我们只需要右键粘贴。OpenFDE的一键安装命令。然后按回车。即可开始安装。这里它还会让我们输一次。系统密码啊。输完按回车。就开始正式安装了。安装过程中可能会在这个。绿条这儿卡很久啊。这1%我等了7分多钟才动。卡住了不要慌。没死机。等就完事儿了。看到这个的时候按下回车。OpenFDE就安装成功了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第三步。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">由于我们是X86设备。想要运行Arm架构的安卓应用。需要转译。就有了这一步。如果你是在Arm设备上部署的OpenFDE。例如树莓派这种。可以跳过这一步。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先我们来克隆下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">Waydroid_script的仓库。粘贴这行命令。回车。接着切换至脚本目录。粘贴这行命令回车。接着我们来设置虚拟环境。粘贴这行命令回车。它提示我们设置环境需要python。而我们没装python啊。没关系。根据它的提示。我们安装下python即可。复制这行命令。粘贴回车。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_269.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">报错。是因为权限不足啊。我们在命令前加上sudo。回车。输入密码。以管理员权限安装。就能装上了。这里输入y。回车。看到这个。再按下回车。接着我们再次粘贴刚刚的。设置虚拟环境命令回车。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">这次就能正常设置了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">然后我们还需要安装下依赖。粘贴这行命令回车。等待它装好。最后我们粘贴这行命令。即可运行Waydroid_scrip脚本。这里让选Android版本。我们是11啊。直接回车。然后选第一项。Install. 回车。里边这些东西。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">除了libhoudini这个转译层。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">其余的。都别装。比如magisk。装了也打不开。还有这个smartdock。装了系统会无限弹窗。啊非常鬼畜。所以就只装转译即可。空格选择。然后按回车。这里因为我已经装过一次了。它直接就显示安装完毕了啊。如果是第一次装。它是有一个下载进度条的。如果没有霍格沃兹环境。这个下载进度会。巨慢。完了。我们输入reboot。回车。重启。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">reboot. 回车。重..</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">诶。还是这个玩意儿好用。重启后进入Ububtu。你会惊讶的发现。诶。系统居然有图像界面了。我们选择用户。然后在右下角切换桌面至FDE。输入密码。回车。即可进入OpenFDE桌面。那么到这里。整个OpenFDE的安装流程就讲完了。接下来。来说说它的。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_342.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先进入系统。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">啪的一声。很快啊。它就跳出了一个崩溃窗口。糊我脸上。X11. 崩了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">诶我怎么有种不好的预感。默认的桌面确实和安卓一毛一样。我安装了一些应用。也能正常打开。但应用崩溃闪退的问题。也蛮频繁的。也不知道是我这台机器。的个例还是咋的。比较难绷的是。它这个桌面居然是不支持。手势操作的。也就是应用全屏后。你没办法左右滑动返回。也没办法上划回到桌面。再加上在全屏使用的时候。系统还贴心的为你隐藏了dock栏。导致我想返回桌面都找不到路子了。不过后边我发现按右键。调菜单的时候。它是会显示dock的。这时候可以点右下角来返回桌面。然后你可能也发现了。本期视频的画质比较糊。这是因为我使用的是一张。1080P的采集卡来录屏。平时我是用的4K的。为啥这期不用4K呢。因为OpenFDE。它不支持界面缩放啊。用4K图标会很小。啊。它并没有适配高分屏。最后是最难绷的部分。因为开局X11就崩了。导致Linux应用没办法使用。也就是说OpenFDE主打的。Android和Linux同时使用。的这个Linux它用不了了。这。直接就残废了呀。用户体验直降50%。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/3AVyT5OBw6M_415.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">以上这些问题。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我不知道是因为我这台。主机是AMD的缘故还是怎么的。反正在我这儿的使用体验。相当拉胯。不知道别的机器怎么样。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">大家可以部署试一下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">或许在Arm的树莓派上。兼容性表现会更好点。那好吧。本期视频就到这里。如果你喜欢我的视频还请别忘了点赞。我是莫老师。我们下期视频见。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=3AVyT5OBw6M">https://www.youtube.com/watch?v=3AVyT5OBw6M</a></p><p>本期编号：EP265</p><p></p><p>莫老师的附件表（快捷键Crtl+F搜索视频标题）：</p><p></p><p>中国：www.在下莫老师.com</p><p>海外：www.zxmls.lol</p><p></p><p>----------------------------------------------------</p><p></p><p>You can click here to download the files</p><p></p><p>www.在下莫老师.com</p><p>www.zxmls.lol</p>]]></content:encoded>
      <itunes:image href="https://i.ytimg.com/vi/3AVyT5OBw6M/hqdefault.jpg"/>
      <pubDate>2025-09-19T09:00:05.000Z</pubDate>
    </item><item>
      <title><![CDATA[支持多种系统！在NAS上部署PXE服务器，通过网络一键重装电脑系统！]]></title>
      <link>https://www.youtube.com/watch?v=jLdfLH74SQE</link>
      <itunes:title><![CDATA[支持多种系统！在NAS上部署PXE服务器，通过网络一键重装电脑系统！]]></itunes:title>
      <itunes:author><![CDATA[在下莫老师]]></itunes:author>
      <itunes:summary>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/jLdfLH74SQE/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=jLdfLH74SQE">https://www.youtube.com/watch?v=jLdfLH74SQE</a></p><h1>值得閱讀的理由</h1><ul><li>學習如何在 <strong>NAS</strong> 或 <strong>軟路由</strong> 上部署 <strong>PXE</strong> 伺服器，實現區域網路內電腦的免隨身碟安裝系統。</li><li>掌握使用 <strong>iVentoy</strong> 這一強大工具，透過 <strong>Docker Compose</strong> 在 <strong>X86</strong> 架構設備上便捷地安裝多種作業系統。</li><li>了解如何配置客戶端的 <strong>BIOS</strong> 進行 <strong>網路啟動</strong>，並解決常見的網路引導問題，大幅提升系統安裝效率。</li></ul><hr /><h1>摘要</h1><p>作者首先介紹了 <strong>PXE</strong>（Preboot Execution Environment）技術，這是一項由 Intel 開發，允許電腦透過網路引導作業系統的技術。傳統上，當電腦系統崩潰時，使用者需要插入 USB 隨身碟或光碟來安裝系統，而 <strong>PXE</strong> 則實現了直接在 <strong>BIOS</strong> 中設定網路啟動，省去了實體媒介的麻煩。然而，傳統的 <strong>PXE</strong> 需要一個專門的伺服器，通常是一台安裝了 Windows 或 Linux 系統的電腦。考慮到一般家庭不常有兩台電腦，但擁有一台電腦和 <strong>NAS</strong> 或 <strong>軟路由</strong> 的情況則很普遍，作者提出了將 <strong>PXE</strong> 伺服器部署到這些設備上的解決方案。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_0.jpg" /></p><hr /><h2>iVentoy：區域網路裝機神器</h2><p>為了實現這一目標，作者推薦使用 <strong>iVentoy</strong>，這款「網啟神器」支援 Windows PE、Linux、FnOS 等多種系統的安裝。只需啟動 <strong>iVentoy</strong>，區域網路中的所有電腦便能透過網路選擇並安裝所需的系統，功能極為強大。儘管 <strong>iVentoy</strong> 的普通版本可安裝在 Windows 和 Linux 系統上，但作者選擇了透過 <strong>Docker 部署</strong> 的方式，讓它在 <strong>NAS</strong> 或 <strong>軟路由</strong> 的容器中運行，需要時啟動，不需時關閉，以避免資源佔用。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_26.jpg" /></p><hr /><h2>部署前的準備與環境設置</h2><p>在開始部署之前，作者強調需要一台 <strong>X86 架構</strong> 的 <strong>NAS</strong> 或 <strong>軟路由</strong>，因為 <strong>iVentoy</strong> 目前不支援 Arm 平台。影片以飛牛 <strong>FnOS</strong> 系統作為演示平台，但也說明了其他如群暉、CasaOS、OnePanel、OpenWRT 等平台的步驟是類似的，可靈活套用。此外，還需準備好所需的系統 <strong>ISO 镜像</strong>，包括 PE、Windows 或 Linux 系統。作者將這些準備好的檔案統一放置在影片末尾的附件表中供讀者參考。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_54.jpg" /></p><hr /><h2>透過 Docker Compose 部署 iVentoy</h2><p>部署的第一步是來到飛牛 <strong>FnOS</strong> 介面，透過文件管理新建一個資料夾用於存放系統安裝 <strong>ISO 镜像</strong>，並將所需镜像上傳至此。接著，作者引導讀者前往 <strong>iVentoy</strong> 的 <strong>Docker</strong> 專案地址，複製由 szabis 大佬提供的 <strong>Docker Compose</strong> 配置命令。將該命令貼入新建的 `docker-compose.yml` 文件中，並將其上傳至 <strong>FnOS</strong> 的 <strong>Docker Compose</strong> 介面。設定好專案名稱和存放路徑後，點擊「構築」即可完成 <strong>iVentoy</strong> 容器的部署。部署成功後，透過容器的 26000 埠即可進入 <strong>iVentoy</strong> 後台介面，並可切換至中文。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_103.jpg" /></p><hr /><h2>映射系統镜像與啟用服務</h2><p>部署完成後，作者指示暫停 <strong>iVentoy</strong> 容器，進入容器設定頁面，將之前存放 <strong>ISO 镜像</strong> 的資料夾映射到 <strong>iVentoy</strong> 容器內部的 `/iso` 路徑，然後保存並重新啟動容器。這樣，在 <strong>iVentoy</strong> 後台的「镜像管理」介面就能看到所有已上傳的系統镜像。未來只需將新的系統安裝镜像上傳至 <strong>NAS</strong> 的指定資料夾，即可在 <strong>iVentoy</strong> 中使用。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_160.jpg" /></p><hr /><h2>客戶端網路啟動與 IP 設定</h2><p>要使用 <strong>PXE 網啟</strong>，作者提醒使用者需先了解客戶端的 <strong>IP 地址</strong>，因為 <strong>iVentoy</strong> 的免費版限制了服務覆蓋的 <strong>IP 網段</strong> 只有 20 個。對於無法進入系統的電腦，作者提供了一個巧妙的方法：讓它進行一次網路啟動。以天钡 GEM12 迷你主機為例，進入其 <strong>BIOS</strong>，啟用「Network Stack」和「IPV4 PXE」選項，並將「網路啟動」設為第一啟動順序。電腦重啟後，即使未能找到伺服器，也會從路由器獲取 <strong>IP 和 MAC 地址</strong>。作者透過路由器的後台找到了該電腦的 <strong>IP 地址</strong>。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_187.jpg" /></p><hr /><h2>完成網路啟動與疑難排解</h2><p>獲取客戶端 <strong>IP 地址</strong> 後，作者回到 <strong>iVentoy</strong> 後台，設定服務的覆蓋 <strong>IP 網段</strong> 以包含客戶端的 <strong>IP</strong>，然後啟動服務。此時，重新啟動客戶端電腦，便能成功搜尋到 <strong>PXE 伺服器</strong> 並進入 <strong>iVentoy 介面</strong>，選擇並引導啟動存放在 <strong>NAS</strong> 中的 <strong>ISO 镜像</strong>。作者指出，這與使用 USB 隨身碟上的 Ventoy 體驗一致，從此獲得了局域網裝機的便利。對於多台電腦，可以手動將其 <strong>IP 地址</strong> 設定到相近的網段內，20 個 <strong>IP 地址</strong> 足夠覆蓋大部分需求。在不使用時，關閉 <strong>iVentoy</strong> 容器可節省 <strong>NAS</strong> 資源。作者也提供了疑難排解建議：若遇到花屏，可調低啟動菜單解析度；若仍無效，則將圖形引導界面 (GUI) 改為純文字的 (CLI) 模式。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_242.jpg" /></p><hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">是由Intel开发的一项技术。旨在通过网络引导计算机操作系统。说人话就是在你的电脑系统炸了后。不用去插U盘。插光盘了。直接在BIOS设置启动顺序。从网络启动。就能开始装系统。作为应急方案。听起来好像挺方便啊。但传统的PXE是需要一个服务端的。通常这个服务端会是一台。装有Windows系统。或Linux系统的电脑。不过嘛。普通人家里一般也不会有两台电脑对吧。但有一台电脑和一台NAS。或软路由的情况还是挺多的。所以我们有没可能把这个PXE服务器。给它部署到NAS。或软路由上。实现局域网中的所有电脑。都能直接通过网络装机呢。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">诶。答案是可以的。这里要用到的工具依然是。iVentoy这个网启神器啊。它支持Windows。PE. Linux. FnOS等等。超多的系统的安装。只要启动它。局域网中的所有电脑。想装什么系统。就装什么系统。非常强大。iVentoy的普通版本可以被安装在。Windows和Linux系统上。不过我们这里会用另一种安装方式。也就是Docker部署。让它跑在NAS或软路由的容器里。需要的时候就启动。不需要就关掉。避免占用资源。那么话不多说。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">欢迎来到。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_76.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我们需要一台X86架构的NAS或软路由。选择X86是因为。iVentoy并不支持Arm平台啊。这里我会以飞牛FnOS来作为演示。其余平台。例如群晖。CasaOS. OnePanel. OpenWRT这些。它们的步骤都是类似的。灵活套用即可。本期视频就不再演示。飞牛FnOS系统本身的安装了。如果你还没有安装过飞牛FnOS系统。可以看看我的这期视频。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">除了NAS。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">还需要准备一些系统的iSO镜像。PE的。Windows的。Linux系统的。你要装什么系统。就下什么系统。如果你找不到系统安装镜像。我在附件表里也准备了一些。那么按照国际惯例。这些东西我都已经放在了视频末尾。点个赞。快去看看吧。准备完成后。接下来是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">来到飞牛FnOS首页。打开文件管理。新建一个文件夹。用来存放系统安装镜像。文件夹存放位置自己选一下。确定。接着戳这个文件夹。把你想要安装的系统的iSO镜像。一起上传到这个文件夹。这些镜像待会都会被。加载到iVentoy中。供我们装系统时使用。接着我们打开iVentoy的。Docker项目地址。这个项目是由这个名为。szabis的大佬发起的啊。往下拉。他为我们提供了直接的终端安装命令。也提供了Docker Compose配置。这里我会使用Docker Compose来配置。复制这一长串的命令。然后来到电脑上的资源管理器中。右键。新建一个文本文档。接着打开它。把刚刚复制的命令右键。粘贴进去。接着点左上角文件。保存。回到刚刚的文件夹中。戳一下文件名。把文件重命名为。docker-compose.yml. 确定。问你要更改后缀名吗。点是。回到飞牛FnOS后台。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">点击Docker。Compose. 新增一个项目。项目名称随便填一个。但得全部小写。路径戳一下。这个是我们创建的。iVentoy容器的存放路径啊。我们可以新建一个Docker文件夹。选择下存储位置。确定。再在这个Docker文件夹中。新建一个iVentoy文件夹来。保存容器啊。分类保存避免混乱。确定。接着在这里戳一下。找到我们刚刚创建的。docker-compose.yml文件。上传。确定。然后你会看到一个待构建的项目。我们戳这三个点。点击构建。稍等一会。看到这个。就表示项目已经构建成功了。我们关闭日志窗口。点击左侧容器。即可看到iVentoy已经运行起来了。选择这个锁链。再点26000端口。即可打开iVentoy后台。在右上角。可以切换软件至中文。那么到这里。iVentoy的部署就讲完了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接下来是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_212.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第二步。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">来到飞牛FnOS的Docker这里。我们先将iVentoy的容器停止。这里它会报错。这是正常的。接着戳这三个点。点详情。在容器设置这一页。往下拉。点击存储位置。现在我们要来映射。iVentoy的iSO镜像。存放路径啊。点击iso这一项。选择你存放镜像的文件夹。确定。最后别忘了点保存。我们再次启动容器。进入iVentoy后台。点击左侧镜像管理。就能看到系统镜像了。之后你只需要把系统安装镜像。上传至NAS的镜像存放文件夹中。即可在iVentoy中使用。接着我们回到iVentoy首页。要使用PXE网启。我们需要先知道客户端的IP地址。这是因为iVentoy的免费版。限制了IP段为20个。我们必须确保。客户端的IP在这个网段内。才能搜索到PXE服务器。那我们要如何知道一台。连系统都进不去的电脑。的IP地址是多少呢。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">其实只需要让它网启一次就行了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">以这台天钡的GEM12迷你主机为例。确保它正确接入了网线。我们进入其BIOS。接着切到高级设置这一页。找到网络启动设置。点进去。确保里边的Network Stack。和IPV4 PXE选项。处于Enabled启用状态。而非Disabled关闭状态。接着返回。切换到Boot引导选单。在启动顺序这里。把第一位调整为网络启动。也就是这个Network开头的。然后。保存。退出。电脑会重启。稍等一会。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">电脑会开始搜索。局域网中的PXE服务器。此时我们的iVenoty还没启动。或者已经启动了。但电脑不在它的覆盖范围内。电脑端肯定是搜不到服务器的。但它会联网。会获取到路由器分配的。IP和MAC地址。诶。没错了。根据屏幕上显示的MAC地址。我们来到路由器后台。就能找到这台电脑的IP了。我这里是192.168.31.225。回到iVentoy后台。设置一下服务的覆盖IP网段。让我们的电脑IP在其之内。之后启动服务。回到电脑上。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">重启。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_319.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">这次应该就能搜索到。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">PXE服务器。并正常进入iVentoy界面了。这里可以看到我们存放在。NAS中的iSO镜像。随便选择一个回车。即可引导启动。和U盘上的Ventoy是一样的啊。那么到这里。你就获得了一个局域网装机神器。只要将电脑的启动方式第一位。设置为PXE网启。再让iVentoy覆盖其IP。就能随时随地安装任意系统。真的非常方便。如果有多台电脑。也可以自己手动把这些电脑的IP地址。设置到相近的网段内。20个IP地址可以覆盖20台机器。只要不是开网吧的。应该够用了。在不使用的时候。我们可以关闭iVentoy容器。这样也不会占用NAS的资源。要用的时候再启动它。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">另外还要补充一点。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">如果在启动镜像的时候。遇到花屏的情况。可以到iVentoy的参数配置页面。将启动菜单的分辨率调低。一般都能解决问题。如果还不行。还可以将iVentoy的。图形引导界面GUI。改成纯文字的CLI。那好吧。本期视频就到这里。如果觉得对你有帮助。还请不要吝啬你手中的赞。我是莫老师。我们下期视频见。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=jLdfLH74SQE">https://www.youtube.com/watch?v=jLdfLH74SQE</a></p><p>本期编号：EP262</p><p></p><p>莫老师的附件表（快捷键Crtl+F搜索视频标题）：</p><p></p><p>中国：www.在下莫老师.com</p><p>海外：www.zxmls.lol</p><p></p><p>----------------------------------------------------</p><p></p><p>You can click here to download the files</p><p></p><p>www.在下莫老师.com</p><p>www.zxmls.lol</p>]]>
      </itunes:summary>
      <description>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/jLdfLH74SQE/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=jLdfLH74SQE">https://www.youtube.com/watch?v=jLdfLH74SQE</a></p><h1>值得閱讀的理由</h1><ul><li>學習如何在 <strong>NAS</strong> 或 <strong>軟路由</strong> 上部署 <strong>PXE</strong> 伺服器，實現區域網路內電腦的免隨身碟安裝系統。</li><li>掌握使用 <strong>iVentoy</strong> 這一強大工具，透過 <strong>Docker Compose</strong> 在 <strong>X86</strong> 架構設備上便捷地安裝多種作業系統。</li><li>了解如何配置客戶端的 <strong>BIOS</strong> 進行 <strong>網路啟動</strong>，並解決常見的網路引導問題，大幅提升系統安裝效率。</li></ul><hr /><h1>摘要</h1><p>作者首先介紹了 <strong>PXE</strong>（Preboot Execution Environment）技術，這是一項由 Intel 開發，允許電腦透過網路引導作業系統的技術。傳統上，當電腦系統崩潰時，使用者需要插入 USB 隨身碟或光碟來安裝系統，而 <strong>PXE</strong> 則實現了直接在 <strong>BIOS</strong> 中設定網路啟動，省去了實體媒介的麻煩。然而，傳統的 <strong>PXE</strong> 需要一個專門的伺服器，通常是一台安裝了 Windows 或 Linux 系統的電腦。考慮到一般家庭不常有兩台電腦，但擁有一台電腦和 <strong>NAS</strong> 或 <strong>軟路由</strong> 的情況則很普遍，作者提出了將 <strong>PXE</strong> 伺服器部署到這些設備上的解決方案。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_0.jpg" /></p><hr /><h2>iVentoy：區域網路裝機神器</h2><p>為了實現這一目標，作者推薦使用 <strong>iVentoy</strong>，這款「網啟神器」支援 Windows PE、Linux、FnOS 等多種系統的安裝。只需啟動 <strong>iVentoy</strong>，區域網路中的所有電腦便能透過網路選擇並安裝所需的系統，功能極為強大。儘管 <strong>iVentoy</strong> 的普通版本可安裝在 Windows 和 Linux 系統上，但作者選擇了透過 <strong>Docker 部署</strong> 的方式，讓它在 <strong>NAS</strong> 或 <strong>軟路由</strong> 的容器中運行，需要時啟動，不需時關閉，以避免資源佔用。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_26.jpg" /></p><hr /><h2>部署前的準備與環境設置</h2><p>在開始部署之前，作者強調需要一台 <strong>X86 架構</strong> 的 <strong>NAS</strong> 或 <strong>軟路由</strong>，因為 <strong>iVentoy</strong> 目前不支援 Arm 平台。影片以飛牛 <strong>FnOS</strong> 系統作為演示平台，但也說明了其他如群暉、CasaOS、OnePanel、OpenWRT 等平台的步驟是類似的，可靈活套用。此外，還需準備好所需的系統 <strong>ISO 镜像</strong>，包括 PE、Windows 或 Linux 系統。作者將這些準備好的檔案統一放置在影片末尾的附件表中供讀者參考。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_54.jpg" /></p><hr /><h2>透過 Docker Compose 部署 iVentoy</h2><p>部署的第一步是來到飛牛 <strong>FnOS</strong> 介面，透過文件管理新建一個資料夾用於存放系統安裝 <strong>ISO 镜像</strong>，並將所需镜像上傳至此。接著，作者引導讀者前往 <strong>iVentoy</strong> 的 <strong>Docker</strong> 專案地址，複製由 szabis 大佬提供的 <strong>Docker Compose</strong> 配置命令。將該命令貼入新建的 `docker-compose.yml` 文件中，並將其上傳至 <strong>FnOS</strong> 的 <strong>Docker Compose</strong> 介面。設定好專案名稱和存放路徑後，點擊「構築」即可完成 <strong>iVentoy</strong> 容器的部署。部署成功後，透過容器的 26000 埠即可進入 <strong>iVentoy</strong> 後台介面，並可切換至中文。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_103.jpg" /></p><hr /><h2>映射系統镜像與啟用服務</h2><p>部署完成後，作者指示暫停 <strong>iVentoy</strong> 容器，進入容器設定頁面，將之前存放 <strong>ISO 镜像</strong> 的資料夾映射到 <strong>iVentoy</strong> 容器內部的 `/iso` 路徑，然後保存並重新啟動容器。這樣，在 <strong>iVentoy</strong> 後台的「镜像管理」介面就能看到所有已上傳的系統镜像。未來只需將新的系統安裝镜像上傳至 <strong>NAS</strong> 的指定資料夾，即可在 <strong>iVentoy</strong> 中使用。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_160.jpg" /></p><hr /><h2>客戶端網路啟動與 IP 設定</h2><p>要使用 <strong>PXE 網啟</strong>，作者提醒使用者需先了解客戶端的 <strong>IP 地址</strong>，因為 <strong>iVentoy</strong> 的免費版限制了服務覆蓋的 <strong>IP 網段</strong> 只有 20 個。對於無法進入系統的電腦，作者提供了一個巧妙的方法：讓它進行一次網路啟動。以天钡 GEM12 迷你主機為例，進入其 <strong>BIOS</strong>，啟用「Network Stack」和「IPV4 PXE」選項，並將「網路啟動」設為第一啟動順序。電腦重啟後，即使未能找到伺服器，也會從路由器獲取 <strong>IP 和 MAC 地址</strong>。作者透過路由器的後台找到了該電腦的 <strong>IP 地址</strong>。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_187.jpg" /></p><hr /><h2>完成網路啟動與疑難排解</h2><p>獲取客戶端 <strong>IP 地址</strong> 後，作者回到 <strong>iVentoy</strong> 後台，設定服務的覆蓋 <strong>IP 網段</strong> 以包含客戶端的 <strong>IP</strong>，然後啟動服務。此時，重新啟動客戶端電腦，便能成功搜尋到 <strong>PXE 伺服器</strong> 並進入 <strong>iVentoy 介面</strong>，選擇並引導啟動存放在 <strong>NAS</strong> 中的 <strong>ISO 镜像</strong>。作者指出，這與使用 USB 隨身碟上的 Ventoy 體驗一致，從此獲得了局域網裝機的便利。對於多台電腦，可以手動將其 <strong>IP 地址</strong> 設定到相近的網段內，20 個 <strong>IP 地址</strong> 足夠覆蓋大部分需求。在不使用時，關閉 <strong>iVentoy</strong> 容器可節省 <strong>NAS</strong> 資源。作者也提供了疑難排解建議：若遇到花屏，可調低啟動菜單解析度；若仍無效，則將圖形引導界面 (GUI) 改為純文字的 (CLI) 模式。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_242.jpg" /></p><hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">是由Intel开发的一项技术。旨在通过网络引导计算机操作系统。说人话就是在你的电脑系统炸了后。不用去插U盘。插光盘了。直接在BIOS设置启动顺序。从网络启动。就能开始装系统。作为应急方案。听起来好像挺方便啊。但传统的PXE是需要一个服务端的。通常这个服务端会是一台。装有Windows系统。或Linux系统的电脑。不过嘛。普通人家里一般也不会有两台电脑对吧。但有一台电脑和一台NAS。或软路由的情况还是挺多的。所以我们有没可能把这个PXE服务器。给它部署到NAS。或软路由上。实现局域网中的所有电脑。都能直接通过网络装机呢。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">诶。答案是可以的。这里要用到的工具依然是。iVentoy这个网启神器啊。它支持Windows。PE. Linux. FnOS等等。超多的系统的安装。只要启动它。局域网中的所有电脑。想装什么系统。就装什么系统。非常强大。iVentoy的普通版本可以被安装在。Windows和Linux系统上。不过我们这里会用另一种安装方式。也就是Docker部署。让它跑在NAS或软路由的容器里。需要的时候就启动。不需要就关掉。避免占用资源。那么话不多说。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">欢迎来到。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_76.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我们需要一台X86架构的NAS或软路由。选择X86是因为。iVentoy并不支持Arm平台啊。这里我会以飞牛FnOS来作为演示。其余平台。例如群晖。CasaOS. OnePanel. OpenWRT这些。它们的步骤都是类似的。灵活套用即可。本期视频就不再演示。飞牛FnOS系统本身的安装了。如果你还没有安装过飞牛FnOS系统。可以看看我的这期视频。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">除了NAS。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">还需要准备一些系统的iSO镜像。PE的。Windows的。Linux系统的。你要装什么系统。就下什么系统。如果你找不到系统安装镜像。我在附件表里也准备了一些。那么按照国际惯例。这些东西我都已经放在了视频末尾。点个赞。快去看看吧。准备完成后。接下来是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">来到飞牛FnOS首页。打开文件管理。新建一个文件夹。用来存放系统安装镜像。文件夹存放位置自己选一下。确定。接着戳这个文件夹。把你想要安装的系统的iSO镜像。一起上传到这个文件夹。这些镜像待会都会被。加载到iVentoy中。供我们装系统时使用。接着我们打开iVentoy的。Docker项目地址。这个项目是由这个名为。szabis的大佬发起的啊。往下拉。他为我们提供了直接的终端安装命令。也提供了Docker Compose配置。这里我会使用Docker Compose来配置。复制这一长串的命令。然后来到电脑上的资源管理器中。右键。新建一个文本文档。接着打开它。把刚刚复制的命令右键。粘贴进去。接着点左上角文件。保存。回到刚刚的文件夹中。戳一下文件名。把文件重命名为。docker-compose.yml. 确定。问你要更改后缀名吗。点是。回到飞牛FnOS后台。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">点击Docker。Compose. 新增一个项目。项目名称随便填一个。但得全部小写。路径戳一下。这个是我们创建的。iVentoy容器的存放路径啊。我们可以新建一个Docker文件夹。选择下存储位置。确定。再在这个Docker文件夹中。新建一个iVentoy文件夹来。保存容器啊。分类保存避免混乱。确定。接着在这里戳一下。找到我们刚刚创建的。docker-compose.yml文件。上传。确定。然后你会看到一个待构建的项目。我们戳这三个点。点击构建。稍等一会。看到这个。就表示项目已经构建成功了。我们关闭日志窗口。点击左侧容器。即可看到iVentoy已经运行起来了。选择这个锁链。再点26000端口。即可打开iVentoy后台。在右上角。可以切换软件至中文。那么到这里。iVentoy的部署就讲完了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接下来是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_212.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第二步。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">来到飞牛FnOS的Docker这里。我们先将iVentoy的容器停止。这里它会报错。这是正常的。接着戳这三个点。点详情。在容器设置这一页。往下拉。点击存储位置。现在我们要来映射。iVentoy的iSO镜像。存放路径啊。点击iso这一项。选择你存放镜像的文件夹。确定。最后别忘了点保存。我们再次启动容器。进入iVentoy后台。点击左侧镜像管理。就能看到系统镜像了。之后你只需要把系统安装镜像。上传至NAS的镜像存放文件夹中。即可在iVentoy中使用。接着我们回到iVentoy首页。要使用PXE网启。我们需要先知道客户端的IP地址。这是因为iVentoy的免费版。限制了IP段为20个。我们必须确保。客户端的IP在这个网段内。才能搜索到PXE服务器。那我们要如何知道一台。连系统都进不去的电脑。的IP地址是多少呢。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">其实只需要让它网启一次就行了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">以这台天钡的GEM12迷你主机为例。确保它正确接入了网线。我们进入其BIOS。接着切到高级设置这一页。找到网络启动设置。点进去。确保里边的Network Stack。和IPV4 PXE选项。处于Enabled启用状态。而非Disabled关闭状态。接着返回。切换到Boot引导选单。在启动顺序这里。把第一位调整为网络启动。也就是这个Network开头的。然后。保存。退出。电脑会重启。稍等一会。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">电脑会开始搜索。局域网中的PXE服务器。此时我们的iVenoty还没启动。或者已经启动了。但电脑不在它的覆盖范围内。电脑端肯定是搜不到服务器的。但它会联网。会获取到路由器分配的。IP和MAC地址。诶。没错了。根据屏幕上显示的MAC地址。我们来到路由器后台。就能找到这台电脑的IP了。我这里是192.168.31.225。回到iVentoy后台。设置一下服务的覆盖IP网段。让我们的电脑IP在其之内。之后启动服务。回到电脑上。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">重启。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_319.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">这次应该就能搜索到。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">PXE服务器。并正常进入iVentoy界面了。这里可以看到我们存放在。NAS中的iSO镜像。随便选择一个回车。即可引导启动。和U盘上的Ventoy是一样的啊。那么到这里。你就获得了一个局域网装机神器。只要将电脑的启动方式第一位。设置为PXE网启。再让iVentoy覆盖其IP。就能随时随地安装任意系统。真的非常方便。如果有多台电脑。也可以自己手动把这些电脑的IP地址。设置到相近的网段内。20个IP地址可以覆盖20台机器。只要不是开网吧的。应该够用了。在不使用的时候。我们可以关闭iVentoy容器。这样也不会占用NAS的资源。要用的时候再启动它。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">另外还要补充一点。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">如果在启动镜像的时候。遇到花屏的情况。可以到iVentoy的参数配置页面。将启动菜单的分辨率调低。一般都能解决问题。如果还不行。还可以将iVentoy的。图形引导界面GUI。改成纯文字的CLI。那好吧。本期视频就到这里。如果觉得对你有帮助。还请不要吝啬你手中的赞。我是莫老师。我们下期视频见。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=jLdfLH74SQE">https://www.youtube.com/watch?v=jLdfLH74SQE</a></p><p>本期编号：EP262</p><p></p><p>莫老师的附件表（快捷键Crtl+F搜索视频标题）：</p><p></p><p>中国：www.在下莫老师.com</p><p>海外：www.zxmls.lol</p><p></p><p>----------------------------------------------------</p><p></p><p>You can click here to download the files</p><p></p><p>www.在下莫老师.com</p><p>www.zxmls.lol</p>]]>
      </description>
      <content:encoded><![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/jLdfLH74SQE/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=jLdfLH74SQE">https://www.youtube.com/watch?v=jLdfLH74SQE</a></p><h1>值得閱讀的理由</h1><ul><li>學習如何在 <strong>NAS</strong> 或 <strong>軟路由</strong> 上部署 <strong>PXE</strong> 伺服器，實現區域網路內電腦的免隨身碟安裝系統。</li><li>掌握使用 <strong>iVentoy</strong> 這一強大工具，透過 <strong>Docker Compose</strong> 在 <strong>X86</strong> 架構設備上便捷地安裝多種作業系統。</li><li>了解如何配置客戶端的 <strong>BIOS</strong> 進行 <strong>網路啟動</strong>，並解決常見的網路引導問題，大幅提升系統安裝效率。</li></ul><hr /><h1>摘要</h1><p>作者首先介紹了 <strong>PXE</strong>（Preboot Execution Environment）技術，這是一項由 Intel 開發，允許電腦透過網路引導作業系統的技術。傳統上，當電腦系統崩潰時，使用者需要插入 USB 隨身碟或光碟來安裝系統，而 <strong>PXE</strong> 則實現了直接在 <strong>BIOS</strong> 中設定網路啟動，省去了實體媒介的麻煩。然而，傳統的 <strong>PXE</strong> 需要一個專門的伺服器，通常是一台安裝了 Windows 或 Linux 系統的電腦。考慮到一般家庭不常有兩台電腦，但擁有一台電腦和 <strong>NAS</strong> 或 <strong>軟路由</strong> 的情況則很普遍，作者提出了將 <strong>PXE</strong> 伺服器部署到這些設備上的解決方案。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_0.jpg" /></p><hr /><h2>iVentoy：區域網路裝機神器</h2><p>為了實現這一目標，作者推薦使用 <strong>iVentoy</strong>，這款「網啟神器」支援 Windows PE、Linux、FnOS 等多種系統的安裝。只需啟動 <strong>iVentoy</strong>，區域網路中的所有電腦便能透過網路選擇並安裝所需的系統，功能極為強大。儘管 <strong>iVentoy</strong> 的普通版本可安裝在 Windows 和 Linux 系統上，但作者選擇了透過 <strong>Docker 部署</strong> 的方式，讓它在 <strong>NAS</strong> 或 <strong>軟路由</strong> 的容器中運行，需要時啟動，不需時關閉，以避免資源佔用。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_26.jpg" /></p><hr /><h2>部署前的準備與環境設置</h2><p>在開始部署之前，作者強調需要一台 <strong>X86 架構</strong> 的 <strong>NAS</strong> 或 <strong>軟路由</strong>，因為 <strong>iVentoy</strong> 目前不支援 Arm 平台。影片以飛牛 <strong>FnOS</strong> 系統作為演示平台，但也說明了其他如群暉、CasaOS、OnePanel、OpenWRT 等平台的步驟是類似的，可靈活套用。此外，還需準備好所需的系統 <strong>ISO 镜像</strong>，包括 PE、Windows 或 Linux 系統。作者將這些準備好的檔案統一放置在影片末尾的附件表中供讀者參考。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_54.jpg" /></p><hr /><h2>透過 Docker Compose 部署 iVentoy</h2><p>部署的第一步是來到飛牛 <strong>FnOS</strong> 介面，透過文件管理新建一個資料夾用於存放系統安裝 <strong>ISO 镜像</strong>，並將所需镜像上傳至此。接著，作者引導讀者前往 <strong>iVentoy</strong> 的 <strong>Docker</strong> 專案地址，複製由 szabis 大佬提供的 <strong>Docker Compose</strong> 配置命令。將該命令貼入新建的 `docker-compose.yml` 文件中，並將其上傳至 <strong>FnOS</strong> 的 <strong>Docker Compose</strong> 介面。設定好專案名稱和存放路徑後，點擊「構築」即可完成 <strong>iVentoy</strong> 容器的部署。部署成功後，透過容器的 26000 埠即可進入 <strong>iVentoy</strong> 後台介面，並可切換至中文。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_103.jpg" /></p><hr /><h2>映射系統镜像與啟用服務</h2><p>部署完成後，作者指示暫停 <strong>iVentoy</strong> 容器，進入容器設定頁面，將之前存放 <strong>ISO 镜像</strong> 的資料夾映射到 <strong>iVentoy</strong> 容器內部的 `/iso` 路徑，然後保存並重新啟動容器。這樣，在 <strong>iVentoy</strong> 後台的「镜像管理」介面就能看到所有已上傳的系統镜像。未來只需將新的系統安裝镜像上傳至 <strong>NAS</strong> 的指定資料夾，即可在 <strong>iVentoy</strong> 中使用。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_160.jpg" /></p><hr /><h2>客戶端網路啟動與 IP 設定</h2><p>要使用 <strong>PXE 網啟</strong>，作者提醒使用者需先了解客戶端的 <strong>IP 地址</strong>，因為 <strong>iVentoy</strong> 的免費版限制了服務覆蓋的 <strong>IP 網段</strong> 只有 20 個。對於無法進入系統的電腦，作者提供了一個巧妙的方法：讓它進行一次網路啟動。以天钡 GEM12 迷你主機為例，進入其 <strong>BIOS</strong>，啟用「Network Stack」和「IPV4 PXE」選項，並將「網路啟動」設為第一啟動順序。電腦重啟後，即使未能找到伺服器，也會從路由器獲取 <strong>IP 和 MAC 地址</strong>。作者透過路由器的後台找到了該電腦的 <strong>IP 地址</strong>。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_187.jpg" /></p><hr /><h2>完成網路啟動與疑難排解</h2><p>獲取客戶端 <strong>IP 地址</strong> 後，作者回到 <strong>iVentoy</strong> 後台，設定服務的覆蓋 <strong>IP 網段</strong> 以包含客戶端的 <strong>IP</strong>，然後啟動服務。此時，重新啟動客戶端電腦，便能成功搜尋到 <strong>PXE 伺服器</strong> 並進入 <strong>iVentoy 介面</strong>，選擇並引導啟動存放在 <strong>NAS</strong> 中的 <strong>ISO 镜像</strong>。作者指出，這與使用 USB 隨身碟上的 Ventoy 體驗一致，從此獲得了局域網裝機的便利。對於多台電腦，可以手動將其 <strong>IP 地址</strong> 設定到相近的網段內，20 個 <strong>IP 地址</strong> 足夠覆蓋大部分需求。在不使用時，關閉 <strong>iVentoy</strong> 容器可節省 <strong>NAS</strong> 資源。作者也提供了疑難排解建議：若遇到花屏，可調低啟動菜單解析度；若仍無效，則將圖形引導界面 (GUI) 改為純文字的 (CLI) 模式。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_242.jpg" /></p><hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">是由Intel开发的一项技术。旨在通过网络引导计算机操作系统。说人话就是在你的电脑系统炸了后。不用去插U盘。插光盘了。直接在BIOS设置启动顺序。从网络启动。就能开始装系统。作为应急方案。听起来好像挺方便啊。但传统的PXE是需要一个服务端的。通常这个服务端会是一台。装有Windows系统。或Linux系统的电脑。不过嘛。普通人家里一般也不会有两台电脑对吧。但有一台电脑和一台NAS。或软路由的情况还是挺多的。所以我们有没可能把这个PXE服务器。给它部署到NAS。或软路由上。实现局域网中的所有电脑。都能直接通过网络装机呢。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">诶。答案是可以的。这里要用到的工具依然是。iVentoy这个网启神器啊。它支持Windows。PE. Linux. FnOS等等。超多的系统的安装。只要启动它。局域网中的所有电脑。想装什么系统。就装什么系统。非常强大。iVentoy的普通版本可以被安装在。Windows和Linux系统上。不过我们这里会用另一种安装方式。也就是Docker部署。让它跑在NAS或软路由的容器里。需要的时候就启动。不需要就关掉。避免占用资源。那么话不多说。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">欢迎来到。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_76.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我们需要一台X86架构的NAS或软路由。选择X86是因为。iVentoy并不支持Arm平台啊。这里我会以飞牛FnOS来作为演示。其余平台。例如群晖。CasaOS. OnePanel. OpenWRT这些。它们的步骤都是类似的。灵活套用即可。本期视频就不再演示。飞牛FnOS系统本身的安装了。如果你还没有安装过飞牛FnOS系统。可以看看我的这期视频。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">除了NAS。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">还需要准备一些系统的iSO镜像。PE的。Windows的。Linux系统的。你要装什么系统。就下什么系统。如果你找不到系统安装镜像。我在附件表里也准备了一些。那么按照国际惯例。这些东西我都已经放在了视频末尾。点个赞。快去看看吧。准备完成后。接下来是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">来到飞牛FnOS首页。打开文件管理。新建一个文件夹。用来存放系统安装镜像。文件夹存放位置自己选一下。确定。接着戳这个文件夹。把你想要安装的系统的iSO镜像。一起上传到这个文件夹。这些镜像待会都会被。加载到iVentoy中。供我们装系统时使用。接着我们打开iVentoy的。Docker项目地址。这个项目是由这个名为。szabis的大佬发起的啊。往下拉。他为我们提供了直接的终端安装命令。也提供了Docker Compose配置。这里我会使用Docker Compose来配置。复制这一长串的命令。然后来到电脑上的资源管理器中。右键。新建一个文本文档。接着打开它。把刚刚复制的命令右键。粘贴进去。接着点左上角文件。保存。回到刚刚的文件夹中。戳一下文件名。把文件重命名为。docker-compose.yml. 确定。问你要更改后缀名吗。点是。回到飞牛FnOS后台。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">点击Docker。Compose. 新增一个项目。项目名称随便填一个。但得全部小写。路径戳一下。这个是我们创建的。iVentoy容器的存放路径啊。我们可以新建一个Docker文件夹。选择下存储位置。确定。再在这个Docker文件夹中。新建一个iVentoy文件夹来。保存容器啊。分类保存避免混乱。确定。接着在这里戳一下。找到我们刚刚创建的。docker-compose.yml文件。上传。确定。然后你会看到一个待构建的项目。我们戳这三个点。点击构建。稍等一会。看到这个。就表示项目已经构建成功了。我们关闭日志窗口。点击左侧容器。即可看到iVentoy已经运行起来了。选择这个锁链。再点26000端口。即可打开iVentoy后台。在右上角。可以切换软件至中文。那么到这里。iVentoy的部署就讲完了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">接下来是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_212.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第二步。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">来到飞牛FnOS的Docker这里。我们先将iVentoy的容器停止。这里它会报错。这是正常的。接着戳这三个点。点详情。在容器设置这一页。往下拉。点击存储位置。现在我们要来映射。iVentoy的iSO镜像。存放路径啊。点击iso这一项。选择你存放镜像的文件夹。确定。最后别忘了点保存。我们再次启动容器。进入iVentoy后台。点击左侧镜像管理。就能看到系统镜像了。之后你只需要把系统安装镜像。上传至NAS的镜像存放文件夹中。即可在iVentoy中使用。接着我们回到iVentoy首页。要使用PXE网启。我们需要先知道客户端的IP地址。这是因为iVentoy的免费版。限制了IP段为20个。我们必须确保。客户端的IP在这个网段内。才能搜索到PXE服务器。那我们要如何知道一台。连系统都进不去的电脑。的IP地址是多少呢。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">其实只需要让它网启一次就行了。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">以这台天钡的GEM12迷你主机为例。确保它正确接入了网线。我们进入其BIOS。接着切到高级设置这一页。找到网络启动设置。点进去。确保里边的Network Stack。和IPV4 PXE选项。处于Enabled启用状态。而非Disabled关闭状态。接着返回。切换到Boot引导选单。在启动顺序这里。把第一位调整为网络启动。也就是这个Network开头的。然后。保存。退出。电脑会重启。稍等一会。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">电脑会开始搜索。局域网中的PXE服务器。此时我们的iVenoty还没启动。或者已经启动了。但电脑不在它的覆盖范围内。电脑端肯定是搜不到服务器的。但它会联网。会获取到路由器分配的。IP和MAC地址。诶。没错了。根据屏幕上显示的MAC地址。我们来到路由器后台。就能找到这台电脑的IP了。我这里是192.168.31.225。回到iVentoy后台。设置一下服务的覆盖IP网段。让我们的电脑IP在其之内。之后启动服务。回到电脑上。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">重启。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/jLdfLH74SQE_319.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">这次应该就能搜索到。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">PXE服务器。并正常进入iVentoy界面了。这里可以看到我们存放在。NAS中的iSO镜像。随便选择一个回车。即可引导启动。和U盘上的Ventoy是一样的啊。那么到这里。你就获得了一个局域网装机神器。只要将电脑的启动方式第一位。设置为PXE网启。再让iVentoy覆盖其IP。就能随时随地安装任意系统。真的非常方便。如果有多台电脑。也可以自己手动把这些电脑的IP地址。设置到相近的网段内。20个IP地址可以覆盖20台机器。只要不是开网吧的。应该够用了。在不使用的时候。我们可以关闭iVentoy容器。这样也不会占用NAS的资源。要用的时候再启动它。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">另外还要补充一点。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">如果在启动镜像的时候。遇到花屏的情况。可以到iVentoy的参数配置页面。将启动菜单的分辨率调低。一般都能解决问题。如果还不行。还可以将iVentoy的。图形引导界面GUI。改成纯文字的CLI。那好吧。本期视频就到这里。如果觉得对你有帮助。还请不要吝啬你手中的赞。我是莫老师。我们下期视频见。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=jLdfLH74SQE">https://www.youtube.com/watch?v=jLdfLH74SQE</a></p><p>本期编号：EP262</p><p></p><p>莫老师的附件表（快捷键Crtl+F搜索视频标题）：</p><p></p><p>中国：www.在下莫老师.com</p><p>海外：www.zxmls.lol</p><p></p><p>----------------------------------------------------</p><p></p><p>You can click here to download the files</p><p></p><p>www.在下莫老师.com</p><p>www.zxmls.lol</p>]]></content:encoded>
      <itunes:image href="https://i.ytimg.com/vi/jLdfLH74SQE/hqdefault.jpg"/>
      <pubDate>2025-09-05T10:01:21.000Z</pubDate>
    </item><item>
      <title><![CDATA[飞牛联名款NAS，零刻ME mini 特别版简单上手]]></title>
      <link>https://www.youtube.com/watch?v=dlykX6Iuwr4</link>
      <itunes:title><![CDATA[飞牛联名款NAS，零刻ME mini 特别版简单上手]]></itunes:title>
      <itunes:author><![CDATA[在下莫老师]]></itunes:author>
      <itunes:summary>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/dlykX6Iuwr4/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=dlykX6Iuwr4">https://www.youtube.com/watch?v=dlykX6Iuwr4</a></p><h1>值得閱讀的理由</h1> <ul> <li>深入了解零刻ME mini飛牛聯名款「特別版」與原版在硬體配置和軟體功能上的關鍵差異，助您辨識產品特色。</li> <li>揭示該聯名款在系統層面的獨特優勢，如直接設置「來電自啟」、支援定時開關機，以及內建AI相簿等便利功能。</li> <li>提供該產品的明確定位與選購建議，幫助潛在買家釐清自身需求，避免誤解「全閃存」概念，並考慮更高階機種。</li> </ul> <hr /> <h1>摘要</h1> <h2>引言：特別版零刻ME mini飛牛聯名NAS</h2> <p>影片開頭，莫老師向觀眾展示了一款獨特的產品——<strong>零刻ME mini飛牛硬體聯盟版</strong>的「特別版」NAS。這款尚未上市的聯名NAS與市面上常見的飛牛聯名款ME mini有所不同。市售版通常搭載N150或N95 CPU，並將EMMC替換為128G SSD；而莫老師手中的「特別版」則保留了<strong>N200 CPU</strong>和<strong>64G EMMC</strong>，本質上是在初版ME mini的基礎上，客製化搭載了飛牛系統。莫老師強調，這台機器是他透過特殊管道取得，目前市面上無法購得，本次影片的重點是分析它與原版ME mini之間的差異。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/dlykX6Iuwr4_85.jpg" /></p> <hr /> <h2>硬體設計與配置差異</h2> <p>在硬體方面，首先，機身頂部的<strong>LOGO</strong>已從單純的「零刻」變更為「<strong>飛牛零刻</strong>」。內部配置上，零售版本可能會在第4號盤位額外加裝一條128G SSD，用於安裝飛牛系統，這是因為該盤位是唯一支援<strong>Pcie3.0 ×2</strong>速率的，其餘盤位均為Pcie3.0 ×1。風扇設計依舊維持從上方進氣、下方出風的抽象模式。網口方面，該機仍配備兩個<strong>2.5G網口</strong>。莫老師解釋，儘管是「全閃存」配置，但未能提供萬兆網口的原因在於<strong>Pcie通道數不足</strong>。N150或N200處理器僅有9條Pcie3.0通道，而萬兆網口至少需要消耗8條，這將導致無法滿足硬碟位需求。若要升級CPU以支援更多通道，則會涉及散熱改造及成本增加，與該機入門級的定位不符。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/dlykX6Iuwr4_165.jpg" /></p> <hr /> <h2>軟體系統的獨特功能</h2> <p>在開機進入初始頁後，莫老師發現設備名稱直接顯示為「ME mini」，且開始使用的設備名稱已預先填寫。進入桌面，系統會提示用戶已獲得<strong>5年飛牛高級會員</strong>資格。在系統設定中，「設備名稱」直接顯示「<strong>零刻ME mini</strong>」。更值得注意的是，「儲存空間」功能現在可以<strong>識別硬碟的具體盤位</strong>，這是一般個人版飛牛系統所不具備的。在電源設定中，該系統<strong>支援直接在飛牛介面設定來電自啟</strong>，無需進入BIOS，並且還<strong>支援定時開關機</strong>功能。此外，系統新增了「備份還原」功能，用戶可以建立系統備份，並支援<strong>一鍵還原至初始狀態</strong>。最後，相簿應用程式內建了<strong>AI模型</strong>，可開箱即用並正常調用核顯。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/dlykX6Iuwr4_4.jpg" /></p> <hr /> <h2>使用者關切與產品定位</h2> <p>莫老師提及了用戶普遍關心的問題，例如所贈送的飛牛會員服務並非永久，僅為5年。另一個問題是，若用戶格式化EMMC並安裝Windows系統後，<strong>如何重新安裝回這個客製化的飛牛系統</strong>，因為零刻官網似乎並未提供相關的系統映像包。莫老師也好奇，是否能將此飛牛系統映像克隆到普通ME mini上使用，但他推測多半會<strong>綁定硬體ID</strong>。在售後政策方面，除了附贈5年飛牛高級會員外，其餘服務與原版ME mini相同，包括支援180天換新。用戶可以向零刻或飛牛兩邊的客服尋求協助。莫老師總結，這款機器定位為<strong>家用入門級</strong>，主打<strong>靜音和小巧</strong>，雖然號稱「全閃存」，但與專業用戶需求無關，不適合進行NAS內影片剪輯等高強度工作。他建議潛在買家在入手前務必<strong>釐清自身需求</strong>，專業玩家則可考慮等待零刻ME Pro或ME max等更高階機種。最後，莫老師以「我是莫老師，我們下期視頻見」作結。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/dlykX6Iuwr4_5.jpg" /></p> <hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">看看这是什么。飞牛的首款联名NAS。啊。零刻的ME mini飞牛硬件联盟版。那ME mini这款机器的原版。我之前是已经上手过了。但你看我写的视频标题。特别版。那它一定跟。原版的飞牛联名款ME mini。有些区别。没错了。现在。你能买到的。飞牛联名款ME mini。它的CPU要么是N150。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">要么是N95。然后EMMC也砍了。换成了128G的SSD。但这台机器。它的CPU。依然是N200。64G的EMMC也还在。也就是说。它是在那个初版的ME mini上。定制了一个飞牛系统。这是一台还没上市销售的版本。啊。是我找零刻PY交易来的。也许之后会上。但现在。肯定买不到。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">今天主要是来简单聊下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">这台机器和原版的ME mini。有什么区别啊。那我们就直接开始了。首先是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/dlykX6Iuwr4_61.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">顶部的LOGO换了。改成了飞牛零刻。原先是只有零刻。然后内部的话。我这台跟原版的一样。如果是零售版本。会在4号位。多一条128G的SSD。装的飞牛系统。为什么会是4号位。这里也稍微提一嘴。因为这台机器。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">只有4号位速率是Pcie3.0 ×2。其余几个盘位的速率。都是Pcie3.0 ×1的。风扇依然没改。还是极其抽象的从上边进气。下边出风。网口还是老样子。两个2.5G网口。可能有小伙伴会说。啊。你这都全闪了。为啥不弄个万兆网口啊。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">其实根本原因是因为。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">这台机器的Pcie通道数不够啊。如果要用N150。或者N200的Pcie3.0通道。做万兆。至少需要消耗8条通道。而这玩意总共才9条通道。都拿来做网口了。还要不要硬盘位了。另一个方案就是换CPU。而换了CPU。散热得改。价格也要涨。就不符合这台机器入门级的定位了。说完硬件。接下来是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">先上电开个机吧。进入初始页。诶。名字不一样了。变成了ME mini。开始使用的设备名称也直接填好了。进入桌面后。提示送的5年飞牛高级会员已到账。然后来看下设置。设备名称这里是。直接显示了零刻ME mini。存储空间里可以识别。硬盘的具体盘位了。个人版的飞牛是没法识别。硬盘具体插在哪个槽位的。然后电源这里。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">支持直接在飞牛里设置来电自启了。个人版是需要去BIOS设置的。同时也支持定时开关机了。最后还多了个备份还原。可以创建系统备份。同时也支持一键还原到。系统初始状态。最后一个不同之处就是。相册内置了AI模型。开箱即用。然后能正常调用核显。其余的就没了。软件上就这么多区别。大家吐槽的比较多的问题是。送的飞牛会员不是永久的啊。这个确实比较抽象。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">另一个问题是。如果我把EMMC格了。装成Windows。要如何装回这个。定制的飞牛系统呢。零刻官网好像并没有提供。这个定制系统的镜像包。同时我也挺好奇的。如果我把这个飞牛。系统镜像给克隆出来。装到普通ME mini上。能不能用呢。哈。不过估计。多半是绑定了硬件ID的。最后是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/dlykX6Iuwr4_190.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">开机送5年飞牛高级会员刚刚已经说了。其余售后政策应该是。跟原版的ME mini一样的。支持180天以换代修。还可以。然后机器的客服是。零刻和飞牛的两边都能找。其余的就没了。这台机器的定位是家用。入门级。主打的是静音和小巧。说起来是全闪。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">但其实和专业用户。没啥关系啊。也不是用来在NAS里。干剪视频这种活儿的。所以要入手的话。最好是先了解清楚自己的需求。如果是专业玩家。的话不妨等等零刻的ME Pro。或ME max。那好吧。本期视频就到这里。我是莫老师。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我们下期视频见。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=dlykX6Iuwr4">https://www.youtube.com/watch?v=dlykX6Iuwr4</a></p><p>N200版的飞牛联名款ME mini见过没？</p>]]>
      </itunes:summary>
      <description>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/dlykX6Iuwr4/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=dlykX6Iuwr4">https://www.youtube.com/watch?v=dlykX6Iuwr4</a></p><h1>值得閱讀的理由</h1> <ul> <li>深入了解零刻ME mini飛牛聯名款「特別版」與原版在硬體配置和軟體功能上的關鍵差異，助您辨識產品特色。</li> <li>揭示該聯名款在系統層面的獨特優勢，如直接設置「來電自啟」、支援定時開關機，以及內建AI相簿等便利功能。</li> <li>提供該產品的明確定位與選購建議，幫助潛在買家釐清自身需求，避免誤解「全閃存」概念，並考慮更高階機種。</li> </ul> <hr /> <h1>摘要</h1> <h2>引言：特別版零刻ME mini飛牛聯名NAS</h2> <p>影片開頭，莫老師向觀眾展示了一款獨特的產品——<strong>零刻ME mini飛牛硬體聯盟版</strong>的「特別版」NAS。這款尚未上市的聯名NAS與市面上常見的飛牛聯名款ME mini有所不同。市售版通常搭載N150或N95 CPU，並將EMMC替換為128G SSD；而莫老師手中的「特別版」則保留了<strong>N200 CPU</strong>和<strong>64G EMMC</strong>，本質上是在初版ME mini的基礎上，客製化搭載了飛牛系統。莫老師強調，這台機器是他透過特殊管道取得，目前市面上無法購得，本次影片的重點是分析它與原版ME mini之間的差異。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/dlykX6Iuwr4_85.jpg" /></p> <hr /> <h2>硬體設計與配置差異</h2> <p>在硬體方面，首先，機身頂部的<strong>LOGO</strong>已從單純的「零刻」變更為「<strong>飛牛零刻</strong>」。內部配置上，零售版本可能會在第4號盤位額外加裝一條128G SSD，用於安裝飛牛系統，這是因為該盤位是唯一支援<strong>Pcie3.0 ×2</strong>速率的，其餘盤位均為Pcie3.0 ×1。風扇設計依舊維持從上方進氣、下方出風的抽象模式。網口方面，該機仍配備兩個<strong>2.5G網口</strong>。莫老師解釋，儘管是「全閃存」配置，但未能提供萬兆網口的原因在於<strong>Pcie通道數不足</strong>。N150或N200處理器僅有9條Pcie3.0通道，而萬兆網口至少需要消耗8條，這將導致無法滿足硬碟位需求。若要升級CPU以支援更多通道，則會涉及散熱改造及成本增加，與該機入門級的定位不符。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/dlykX6Iuwr4_165.jpg" /></p> <hr /> <h2>軟體系統的獨特功能</h2> <p>在開機進入初始頁後，莫老師發現設備名稱直接顯示為「ME mini」，且開始使用的設備名稱已預先填寫。進入桌面，系統會提示用戶已獲得<strong>5年飛牛高級會員</strong>資格。在系統設定中，「設備名稱」直接顯示「<strong>零刻ME mini</strong>」。更值得注意的是，「儲存空間」功能現在可以<strong>識別硬碟的具體盤位</strong>，這是一般個人版飛牛系統所不具備的。在電源設定中，該系統<strong>支援直接在飛牛介面設定來電自啟</strong>，無需進入BIOS，並且還<strong>支援定時開關機</strong>功能。此外，系統新增了「備份還原」功能，用戶可以建立系統備份，並支援<strong>一鍵還原至初始狀態</strong>。最後，相簿應用程式內建了<strong>AI模型</strong>，可開箱即用並正常調用核顯。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/dlykX6Iuwr4_4.jpg" /></p> <hr /> <h2>使用者關切與產品定位</h2> <p>莫老師提及了用戶普遍關心的問題，例如所贈送的飛牛會員服務並非永久，僅為5年。另一個問題是，若用戶格式化EMMC並安裝Windows系統後，<strong>如何重新安裝回這個客製化的飛牛系統</strong>，因為零刻官網似乎並未提供相關的系統映像包。莫老師也好奇，是否能將此飛牛系統映像克隆到普通ME mini上使用，但他推測多半會<strong>綁定硬體ID</strong>。在售後政策方面，除了附贈5年飛牛高級會員外，其餘服務與原版ME mini相同，包括支援180天換新。用戶可以向零刻或飛牛兩邊的客服尋求協助。莫老師總結，這款機器定位為<strong>家用入門級</strong>，主打<strong>靜音和小巧</strong>，雖然號稱「全閃存」，但與專業用戶需求無關，不適合進行NAS內影片剪輯等高強度工作。他建議潛在買家在入手前務必<strong>釐清自身需求</strong>，專業玩家則可考慮等待零刻ME Pro或ME max等更高階機種。最後，莫老師以「我是莫老師，我們下期視頻見」作結。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/dlykX6Iuwr4_5.jpg" /></p> <hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">看看这是什么。飞牛的首款联名NAS。啊。零刻的ME mini飞牛硬件联盟版。那ME mini这款机器的原版。我之前是已经上手过了。但你看我写的视频标题。特别版。那它一定跟。原版的飞牛联名款ME mini。有些区别。没错了。现在。你能买到的。飞牛联名款ME mini。它的CPU要么是N150。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">要么是N95。然后EMMC也砍了。换成了128G的SSD。但这台机器。它的CPU。依然是N200。64G的EMMC也还在。也就是说。它是在那个初版的ME mini上。定制了一个飞牛系统。这是一台还没上市销售的版本。啊。是我找零刻PY交易来的。也许之后会上。但现在。肯定买不到。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">今天主要是来简单聊下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">这台机器和原版的ME mini。有什么区别啊。那我们就直接开始了。首先是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/dlykX6Iuwr4_61.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">顶部的LOGO换了。改成了飞牛零刻。原先是只有零刻。然后内部的话。我这台跟原版的一样。如果是零售版本。会在4号位。多一条128G的SSD。装的飞牛系统。为什么会是4号位。这里也稍微提一嘴。因为这台机器。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">只有4号位速率是Pcie3.0 ×2。其余几个盘位的速率。都是Pcie3.0 ×1的。风扇依然没改。还是极其抽象的从上边进气。下边出风。网口还是老样子。两个2.5G网口。可能有小伙伴会说。啊。你这都全闪了。为啥不弄个万兆网口啊。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">其实根本原因是因为。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">这台机器的Pcie通道数不够啊。如果要用N150。或者N200的Pcie3.0通道。做万兆。至少需要消耗8条通道。而这玩意总共才9条通道。都拿来做网口了。还要不要硬盘位了。另一个方案就是换CPU。而换了CPU。散热得改。价格也要涨。就不符合这台机器入门级的定位了。说完硬件。接下来是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">先上电开个机吧。进入初始页。诶。名字不一样了。变成了ME mini。开始使用的设备名称也直接填好了。进入桌面后。提示送的5年飞牛高级会员已到账。然后来看下设置。设备名称这里是。直接显示了零刻ME mini。存储空间里可以识别。硬盘的具体盘位了。个人版的飞牛是没法识别。硬盘具体插在哪个槽位的。然后电源这里。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">支持直接在飞牛里设置来电自启了。个人版是需要去BIOS设置的。同时也支持定时开关机了。最后还多了个备份还原。可以创建系统备份。同时也支持一键还原到。系统初始状态。最后一个不同之处就是。相册内置了AI模型。开箱即用。然后能正常调用核显。其余的就没了。软件上就这么多区别。大家吐槽的比较多的问题是。送的飞牛会员不是永久的啊。这个确实比较抽象。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">另一个问题是。如果我把EMMC格了。装成Windows。要如何装回这个。定制的飞牛系统呢。零刻官网好像并没有提供。这个定制系统的镜像包。同时我也挺好奇的。如果我把这个飞牛。系统镜像给克隆出来。装到普通ME mini上。能不能用呢。哈。不过估计。多半是绑定了硬件ID的。最后是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/dlykX6Iuwr4_190.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">开机送5年飞牛高级会员刚刚已经说了。其余售后政策应该是。跟原版的ME mini一样的。支持180天以换代修。还可以。然后机器的客服是。零刻和飞牛的两边都能找。其余的就没了。这台机器的定位是家用。入门级。主打的是静音和小巧。说起来是全闪。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">但其实和专业用户。没啥关系啊。也不是用来在NAS里。干剪视频这种活儿的。所以要入手的话。最好是先了解清楚自己的需求。如果是专业玩家。的话不妨等等零刻的ME Pro。或ME max。那好吧。本期视频就到这里。我是莫老师。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我们下期视频见。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=dlykX6Iuwr4">https://www.youtube.com/watch?v=dlykX6Iuwr4</a></p><p>N200版的飞牛联名款ME mini见过没？</p>]]>
      </description>
      <content:encoded><![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/dlykX6Iuwr4/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=dlykX6Iuwr4">https://www.youtube.com/watch?v=dlykX6Iuwr4</a></p><h1>值得閱讀的理由</h1> <ul> <li>深入了解零刻ME mini飛牛聯名款「特別版」與原版在硬體配置和軟體功能上的關鍵差異，助您辨識產品特色。</li> <li>揭示該聯名款在系統層面的獨特優勢，如直接設置「來電自啟」、支援定時開關機，以及內建AI相簿等便利功能。</li> <li>提供該產品的明確定位與選購建議，幫助潛在買家釐清自身需求，避免誤解「全閃存」概念，並考慮更高階機種。</li> </ul> <hr /> <h1>摘要</h1> <h2>引言：特別版零刻ME mini飛牛聯名NAS</h2> <p>影片開頭，莫老師向觀眾展示了一款獨特的產品——<strong>零刻ME mini飛牛硬體聯盟版</strong>的「特別版」NAS。這款尚未上市的聯名NAS與市面上常見的飛牛聯名款ME mini有所不同。市售版通常搭載N150或N95 CPU，並將EMMC替換為128G SSD；而莫老師手中的「特別版」則保留了<strong>N200 CPU</strong>和<strong>64G EMMC</strong>，本質上是在初版ME mini的基礎上，客製化搭載了飛牛系統。莫老師強調，這台機器是他透過特殊管道取得，目前市面上無法購得，本次影片的重點是分析它與原版ME mini之間的差異。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/dlykX6Iuwr4_85.jpg" /></p> <hr /> <h2>硬體設計與配置差異</h2> <p>在硬體方面，首先，機身頂部的<strong>LOGO</strong>已從單純的「零刻」變更為「<strong>飛牛零刻</strong>」。內部配置上，零售版本可能會在第4號盤位額外加裝一條128G SSD，用於安裝飛牛系統，這是因為該盤位是唯一支援<strong>Pcie3.0 ×2</strong>速率的，其餘盤位均為Pcie3.0 ×1。風扇設計依舊維持從上方進氣、下方出風的抽象模式。網口方面，該機仍配備兩個<strong>2.5G網口</strong>。莫老師解釋，儘管是「全閃存」配置，但未能提供萬兆網口的原因在於<strong>Pcie通道數不足</strong>。N150或N200處理器僅有9條Pcie3.0通道，而萬兆網口至少需要消耗8條，這將導致無法滿足硬碟位需求。若要升級CPU以支援更多通道，則會涉及散熱改造及成本增加，與該機入門級的定位不符。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/dlykX6Iuwr4_165.jpg" /></p> <hr /> <h2>軟體系統的獨特功能</h2> <p>在開機進入初始頁後，莫老師發現設備名稱直接顯示為「ME mini」，且開始使用的設備名稱已預先填寫。進入桌面，系統會提示用戶已獲得<strong>5年飛牛高級會員</strong>資格。在系統設定中，「設備名稱」直接顯示「<strong>零刻ME mini</strong>」。更值得注意的是，「儲存空間」功能現在可以<strong>識別硬碟的具體盤位</strong>，這是一般個人版飛牛系統所不具備的。在電源設定中，該系統<strong>支援直接在飛牛介面設定來電自啟</strong>，無需進入BIOS，並且還<strong>支援定時開關機</strong>功能。此外，系統新增了「備份還原」功能，用戶可以建立系統備份，並支援<strong>一鍵還原至初始狀態</strong>。最後，相簿應用程式內建了<strong>AI模型</strong>，可開箱即用並正常調用核顯。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/dlykX6Iuwr4_4.jpg" /></p> <hr /> <h2>使用者關切與產品定位</h2> <p>莫老師提及了用戶普遍關心的問題，例如所贈送的飛牛會員服務並非永久，僅為5年。另一個問題是，若用戶格式化EMMC並安裝Windows系統後，<strong>如何重新安裝回這個客製化的飛牛系統</strong>，因為零刻官網似乎並未提供相關的系統映像包。莫老師也好奇，是否能將此飛牛系統映像克隆到普通ME mini上使用，但他推測多半會<strong>綁定硬體ID</strong>。在售後政策方面，除了附贈5年飛牛高級會員外，其餘服務與原版ME mini相同，包括支援180天換新。用戶可以向零刻或飛牛兩邊的客服尋求協助。莫老師總結，這款機器定位為<strong>家用入門級</strong>，主打<strong>靜音和小巧</strong>，雖然號稱「全閃存」，但與專業用戶需求無關，不適合進行NAS內影片剪輯等高強度工作。他建議潛在買家在入手前務必<strong>釐清自身需求</strong>，專業玩家則可考慮等待零刻ME Pro或ME max等更高階機種。最後，莫老師以「我是莫老師，我們下期視頻見」作結。</p> <p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/dlykX6Iuwr4_5.jpg" /></p> <hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">看看这是什么。飞牛的首款联名NAS。啊。零刻的ME mini飞牛硬件联盟版。那ME mini这款机器的原版。我之前是已经上手过了。但你看我写的视频标题。特别版。那它一定跟。原版的飞牛联名款ME mini。有些区别。没错了。现在。你能买到的。飞牛联名款ME mini。它的CPU要么是N150。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">要么是N95。然后EMMC也砍了。换成了128G的SSD。但这台机器。它的CPU。依然是N200。64G的EMMC也还在。也就是说。它是在那个初版的ME mini上。定制了一个飞牛系统。这是一台还没上市销售的版本。啊。是我找零刻PY交易来的。也许之后会上。但现在。肯定买不到。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">今天主要是来简单聊下。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">这台机器和原版的ME mini。有什么区别啊。那我们就直接开始了。首先是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/dlykX6Iuwr4_61.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">顶部的LOGO换了。改成了飞牛零刻。原先是只有零刻。然后内部的话。我这台跟原版的一样。如果是零售版本。会在4号位。多一条128G的SSD。装的飞牛系统。为什么会是4号位。这里也稍微提一嘴。因为这台机器。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">只有4号位速率是Pcie3.0 ×2。其余几个盘位的速率。都是Pcie3.0 ×1的。风扇依然没改。还是极其抽象的从上边进气。下边出风。网口还是老样子。两个2.5G网口。可能有小伙伴会说。啊。你这都全闪了。为啥不弄个万兆网口啊。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">其实根本原因是因为。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">这台机器的Pcie通道数不够啊。如果要用N150。或者N200的Pcie3.0通道。做万兆。至少需要消耗8条通道。而这玩意总共才9条通道。都拿来做网口了。还要不要硬盘位了。另一个方案就是换CPU。而换了CPU。散热得改。价格也要涨。就不符合这台机器入门级的定位了。说完硬件。接下来是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">先上电开个机吧。进入初始页。诶。名字不一样了。变成了ME mini。开始使用的设备名称也直接填好了。进入桌面后。提示送的5年飞牛高级会员已到账。然后来看下设置。设备名称这里是。直接显示了零刻ME mini。存储空间里可以识别。硬盘的具体盘位了。个人版的飞牛是没法识别。硬盘具体插在哪个槽位的。然后电源这里。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">支持直接在飞牛里设置来电自启了。个人版是需要去BIOS设置的。同时也支持定时开关机了。最后还多了个备份还原。可以创建系统备份。同时也支持一键还原到。系统初始状态。最后一个不同之处就是。相册内置了AI模型。开箱即用。然后能正常调用核显。其余的就没了。软件上就这么多区别。大家吐槽的比较多的问题是。送的飞牛会员不是永久的啊。这个确实比较抽象。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">另一个问题是。如果我把EMMC格了。装成Windows。要如何装回这个。定制的飞牛系统呢。零刻官网好像并没有提供。这个定制系统的镜像包。同时我也挺好奇的。如果我把这个飞牛。系统镜像给克隆出来。装到普通ME mini上。能不能用呢。哈。不过估计。多半是绑定了硬件ID的。最后是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/dlykX6Iuwr4_190.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">开机送5年飞牛高级会员刚刚已经说了。其余售后政策应该是。跟原版的ME mini一样的。支持180天以换代修。还可以。然后机器的客服是。零刻和飞牛的两边都能找。其余的就没了。这台机器的定位是家用。入门级。主打的是静音和小巧。说起来是全闪。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">但其实和专业用户。没啥关系啊。也不是用来在NAS里。干剪视频这种活儿的。所以要入手的话。最好是先了解清楚自己的需求。如果是专业玩家。的话不妨等等零刻的ME Pro。或ME max。那好吧。本期视频就到这里。我是莫老师。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">我们下期视频见。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=dlykX6Iuwr4">https://www.youtube.com/watch?v=dlykX6Iuwr4</a></p><p>N200版的飞牛联名款ME mini见过没？</p>]]></content:encoded>
      <itunes:image href="https://i.ytimg.com/vi/dlykX6Iuwr4/hqdefault.jpg"/>
      <pubDate>2025-09-03T11:30:03.000Z</pubDate>
    </item><item>
      <title><![CDATA[通常，我很少用性能炸裂来形容一台NAS！铭凡N5Pro上手体验]]></title>
      <link>https://www.youtube.com/watch?v=wwopW2IYv4o</link>
      <itunes:title><![CDATA[通常，我很少用性能炸裂来形容一台NAS！铭凡N5Pro上手体验]]></itunes:title>
      <itunes:author><![CDATA[在下莫老师]]></itunes:author>
      <itunes:summary>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/wwopW2IYv4o/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=wwopW2IYv4o">https://www.youtube.com/watch?v=wwopW2IYv4o</a></p><h1>值得閱讀的理由</h1><ul><li>深入了解銘凡N5Pro這款破格的NAS/伺服器，結合了旗艦級處理器與企業級擴充性。</li><li>掌握銘凡N5Pro在硬體設計上的獨特之處，包括其模組化主機板、多M.2插槽、ECC記憶體支援及U.2轉接板等高階配置。</li><li>探索銘凡N5Pro在軟體與使用情境上的多樣可能性，從內建系統到第三方虛擬化平台，滿足高性能專業用戶的多元需求。</li></ul><hr /><h1>摘要</h1><p>作者開篇介紹了銘凡N5Pro，一款外型看似傳統五盤位NAS的產品，其搭載的卻是旗艦級迷你主機才會採用的AI9 HX370處理器。這種「逆天」的配置，讓作者提出了新的視角：若將N5Pro視為一台伺服器或「ALL IN ONE」載體，HX370處理器便顯得合理許多。這明確指出N5Pro的定位是為有高性能需求的專業用戶或工作室而設計。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_0.jpg" /></p><p>N5Pro完美繼承了銘凡MS-01的<strong>高擴充性</strong>，兼容各種企業級SSD，並支援外接與內建顯示卡，其本質上可視為在NAS機殼內塞入了一台MS-01，擁有傳統NAS難以企及的性能釋放與可玩性。作者預告將從硬體設計和軟體兩方面深入評測這款「劍走偏鋒」的產品。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_30.jpg" /></p><h2>硬體設計與擴充性</h2><p>銘凡N5Pro的外殼採用了<strong>CNC一體成型工藝</strong>與陽極氧化處理，鋁合金側邊搭配前後塑料板，整體做工精細。機身正面設有五個3.5吋硬碟倉、電源鍵、狀態指示燈、以及支援8K@60Hz視訊輸出的USB4與USB3.2 Gen2接口。硬碟托架可安裝3.5吋或2.5吋硬碟/固態硬碟，並隨機附贈一塊可遮蔽硬碟倉的面板以提升美觀。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_60.jpg" /></p><p>機身背面配有兩個9025大風扇、防盜鎖扣、另一個USB4接口、一個HDMI2.1接口（作者口誤，應為支援8K輸出的視訊接口）、以及NAS中罕見的<strong>OcuLink接口</strong>用於外接顯示卡。此外，還有一個USB3.2 Gen2接口、一個10GbE和一個5GbE的有線網口、USB2.0接口和DC電源接口。下方為主機板和固態硬碟設計了獨立的散熱出風口，並預留了內建顯示卡或其他PCIE設備的I/O面板位置。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_120.jpg" /></p><p>N5Pro的內部設計極具特色，卸下底部兩顆螺絲後，主機板可<strong>直接抽出</strong>，採用模組化設計。主機板與機身之間僅靠金手指完成所有數據傳輸和供電，無排線連接。主機板正面支援三條最長22110尺寸的<strong>PCIE4.0 M.2固態硬碟</strong>，並為固態硬碟配備了獨立散熱風扇。預裝一條金士頓1TB PCIE4.0 M.2固態和一條128G PCIE3.0 M.2固態（用於MinisCloud OS系統）。一個USB3.2 Gen2內置接口專供引導U盤使用，不占用外部I/O，設計巧妙。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_165.jpg" /></p><p>N5Pro的配件中還附贈一塊轉接板，可將三條M.2轉換為兩塊<strong>U.2</strong>和一條M.2，且U.2供電已整合至板上，無需獨立接線，充分展現了對企業級產品的深入理解。主機板背面則有巨大的散熱模組壓制HX370處理器，並預留一個PCIE插槽，可安裝刀卡或萬兆網卡等。下方為兩條<strong>DDR5 5600Mhz記憶體插槽</strong>，最高支援96G容量的<strong>ECC記憶體</strong>，提供更穩定的運作。預裝兩條金士頓16G 5600Mhz記憶體。作者總結，N5Pro的擴充性已達到極致，特別是對企業級產品的兼容性，使其在NAS領域獨樹一幟，為專業玩家提供了極大的DIY操作空間。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_230.jpg" /></p><h2>軟體與應用情境</h2><p>與一般硬體廠商不同，銘凡N5Pro內建了名為<strong>MinisCloud OS</strong>的系統。作者指出該系統完成度意外地不錯，包含影音庫、相簿、下載、Docker、虛擬機乃至內網穿透等功能，具備實用性，但功能與易用性仍有完善空間。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_285.jpg" /></p><p>作者推薦了兩種高性能使用方向。第一種是將<strong>飛牛FnOS</strong>作為底層系統。若無軟路由需求，可在FnOS的虛擬機中運行其他系統，FnOS支援<strong>硬體直通</strong>。玩家可安裝Windows虛擬機並將核顯直通給它以遊玩遊戲（犧牲FnOS硬解性能），或直接加裝刀卡，將刀卡直通給虛擬機，核顯留給FnOS，實現硬解與遊戲兼顧，將N5Pro作為NAS兼串流伺服器使用。不過，飛牛FnOS的網絡結構不允許將多個實體網口橋接用於軟路由。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_345.jpg" /></p><p>第二種玩法是直接安裝PVE或UNRAID等<strong>虛擬化系統</strong>。此方法的優點是能更好地利用多網口和機器性能，實現<strong>ALL IN BOOM</strong>軟路由系統，但上手門檻和故障排除難度較高。在PVE中，可將整個SATA控制器直通給FnOS虛擬機，獲得接近原生FnOS的硬碟插拔體驗，也可將核顯或獨顯直通給虛擬機作為遊戲伺服器。作者甚至嘗試在PVE上運行銘凡自帶的MinisCloud OS，但未能成功。值得注意的是，無論是FnOS還是PVE作為底層，目前都無法識別OcuLink外接顯示卡，這對實現雙系統雙遊戲伺服器的想法是一大遺憾。作者總結，N5Pro在軟體應用上能限制我們的只有想像力，是一台非常適合折騰的機器。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_6.jpg" /></p><h2>結論</h2><p>作者總結銘凡N5Pro與前作MS-01一樣，都是銘凡公司「激進」卻總能「直戳專業玩家的心」的產品。N5Pro是一台<strong>性能管夠、擴充性拉滿</strong>的機器。作者最後詢問觀眾，在國補後4999人民幣的價格下，是否能接受這款產品。影片由莫老師製作，期待下期再見。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_7.jpg" /></p><hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">这。是铭凡N5Pro。看这造型。它肯定是一台NAS对吧。5个盘位。但你能想象吗。它的处理器。居然用了旗舰迷你主机上。才会上的AI9 HX370。一台NAS。用HX370。就。挺逆天的。但反过来想。如果我不把它当成一台NAS。而是作为一台服务器。ALL IN ONE的载体。诶。用HX370是不是就合理多了。所以这台机器的定位。很明显就是给那些有高性能需求的。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">专业用户或者工作室的。它完美继承了来自铭凡。MS-01的高拓展性。兼容各种企业级SSD。支持外接和内置显卡。啊。极其炸裂。甚至都不能说是继承。它就是在NAS中。塞了一台MS-01进去。拥有传统NAS难以企及的。性能释放和可玩性。总之。这又是一台剑走偏锋的产品。和传统的成品NAS。有很多很多的不同之处。所以今天。我将会从硬件设计。和软件两个方面。带你来完整看看这台铭凡N5Pro。到底怎么样。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_64.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">铭凡N5Pro的外壳采用了。CNC一体成型工艺。阳极氧化处理。这四边是铝合金的。前后为塑料。整体做工还不错。缝隙处理得都比较细致。机身正面是5个3.5寸硬盘仓。电源键。状态指示灯。USB4. 及USB3.2Gen2接口。这个USB4是支持视频输出的。最高8K@60Hz。掏出硬盘托架。可以装入3.5寸机械硬盘。和2.5寸机械或固态硬盘。它这个快拆卡扣比较紧。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第一次可能得用东西撬才能取下来。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">硬盘仓后边的PCB观感。挺工整。随机有配一块面板。可以把前边的硬盘仓遮住。这样看起来更美观一点。来看机器背部。上方是两个9025的大风扇。下方则分别有一个防盗锁扣。同样支持8K@60Hz输出的。USB4接口。一个HDMI2.1接口(口误)。OcuLink接口。可以外接显卡。用在NAS中还真是少见。一个USB3.2Gen2接口。两个有线网口。一个是10GbE的。另一个是5GbE的。USB2.0接口。以及一个19V的DC电源接口。下方有为主板和。固态硬盘单独做一个散热出风口。旁边还预留了内置显卡。或其它PCIE设备的。I/O面板位置。通常来说。一台可以拓展内部存储的NAS。都会在底部预留一个仓位。来让用户更换内存和固态。但铭凡不一样。在卸下底部的两颗螺丝后。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">它是直接可以整个抽出主板的。模块化设计。并且主板和机身没有排线连接。就靠这块金手指。完成所有数据传输和供电。来看主板正面。取下散热。它支持3条最大22110长度的。PCIE4.0 M.2固态。22110啊。垃圾佬狂喜了属于是。由于企业级固态发热大。它还给固态单独做了一个散热风扇。并且散热风扇跟固态间留有空隙。带马甲的固态也插得进去。预装了两条固态。一条为金士顿的1TB。PCIE4.0 M.2固态。另一条为128G的。PCIE3.0 M.2固态。应该是用于存放铭凡的。MinisCloud OS系统的。在主板的这个位置。还有一个USB3.2Gen2接口。这个接口是用来插。系统引导U盘的。像群晖。UNRAID这类系统的。引导U盘就可以插这里。不占用外部IO。这个设计还挺有想法的。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">除此之外。N5Pro的配件中还赠送有一块转接板。允许你把3条M.2。转换成2块U.2加一条M.2。并且U.2的供电还。集成到了板子上。不用单独接电源。企业级这块算是被铭凡给玩明白了。我的傲腾终于可以被塞进NAS了。接着来看主板背面。左侧是一块巨大的散热模组。用来压制HX370。右侧则是预留了一块PCIE插槽。允许我们插一张刀卡或者万兆网卡。转接卡之类的。取下散热风扇。下边是两条内存插槽。它最大是支持DDR5 5600Mhz。96G容量的ECC内存。ECC内存相较于传统内存更稳定。更不容易崩溃。预装的是两条金士顿的。16G 5600Mhz内存。整体来看。铭凡N5Pro的确是已经将扩展性。做到了极致。特别是对企业级产品的兼容性。真的是NAS中独一档的存在。这个配置在胜任日常使用之余。还给了我们留下了极大的。DIY操作空间。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">专业玩家狂喜了属于是。接下来来看看。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_244.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">和一般的硬件厂商做NAS不同。铭凡N5Pro它是自带了系统的。名叫MinisCloud OS。并且这个系统的完成度。意外的还不错。有影音库。相册。下载。Docker. 虚拟机。甚至内网穿透。啊。它是真的能用。只不过功能和易用性上。可能还需要继续完善。鉴于这台机器性能这么强。这里推荐两个方向的食用方法。一个是装飞牛FnOS。如果没有软路由方面的需求。那么用飞牛FnOS来作为底层。再在飞牛FnOS的虚拟机里。跑上一些系统是一个不错的选择。飞牛FnOS的虚拟机支持硬件直通。所以想玩游戏的小伙伴。也可以装一个Windows。然后把核显直通给Windows虚拟机。不过这会牺牲。飞牛FnOS的硬解性能。啊当然。由于HX370的CPU算力很猛。即使软解转码。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">它也不带卡的。不过小孩子才做选择。大人可以选择全都要对吧。给N5Pro插上一张刀卡。然后把刀卡直通给虚拟机。核显留给飞牛FnOS。硬解就很完美了。平时当NAS。想玩游戏就当做串流服务器。很香。只是飞牛FnOS的网络结构。不允许我们将多个物理网口。桥接在一起做软路由。接着来说另一种玩法。就是直接安装PVE。或UNRAID这类虚拟机系统。好处就是可以更好的利用。多个网口和机器的性能。安装软路由系统。实现ALL IN BOOM。坏处就是上手门槛比飞牛FnOS更高。并且炸了之后。抢救起来比飞牛FnOS更困难。在PVE中安装飞牛FnOS后。可以把整个SATA管理器直通给它。这样插拔机械硬盘的体验。基本就跟原生飞牛FnOS接近了。也可以将核显或独显。直通给虚拟机。以获得更好的游戏性能。作为游戏服务器来用。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">甚至。我还在PVE上尝试过。把铭凡自带的MinisCloud OS系统。扔进虚拟机里运行。不过很可惜。开机会提示找不到内核。还有一点。不管是飞牛FnOS做底层。还是PVE做底层。我发现它们都是没办法识别。OcuLink外接显卡的。这个还是挺遗憾的。不然就能实现双系统。双游戏服务器了。总的来说。N5Pro在软件这块。能限制我们的只有想象力。它真的是一台非常适合折腾的机器。那么总结一下。前有MS-01。后有N5Pro。铭凡的产品很激进。却又总能直戳专业玩家的心。N5Pro是一台性能管够。拓展性拉满的机器。不知道国补后4999的价格。你能否接受呢。那好吧。本期视频就到这里。我是莫老师。我们下期视频见。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=wwopW2IYv4o">https://www.youtube.com/watch?v=wwopW2IYv4o</a></p><p>铭凡N5Pro是一台设计非常激进的NAS产品，它的超强性能和拓展性在给予DIY玩家足够可能性的同时，也注定会有一定争议，你觉得呢</p><p></p><p>------------------------------------------------------</p><p></p><p>Music from #Uppbeat (free for Creators!):</p><p><a href="https://uppbeat.io/t/kidcut/jazz-and-hop">https://uppbeat.io/t/kidcut/jazz-and-hop</a></p><p>License code: 9OVFJVNPRSHYUBQQ</p><p></p><p>Music from #Uppbeat (free for Creators!):</p><p><a href="https://uppbeat.io/t/mountaineer/juciest">https://uppbeat.io/t/mountaineer/juciest</a></p><p>License code: OMQMVLVHGBLADCHF</p><p></p><p>Music from #Uppbeat (free for Creators!):</p><p><a href="https://uppbeat.io/t/moire/new-life">https://uppbeat.io/t/moire/new-life</a></p><p>License code: DFUTWWQSBS0L1HXD</p><p></p><p>Music from #Uppbeat (free for Creators!):</p><p><a href="https://uppbeat.io/t/moire/old-town">https://uppbeat.io/t/moire/old-town</a></p><p>License code: 9QQ2VG3VHUN0XXXQ</p>]]>
      </itunes:summary>
      <description>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/wwopW2IYv4o/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=wwopW2IYv4o">https://www.youtube.com/watch?v=wwopW2IYv4o</a></p><h1>值得閱讀的理由</h1><ul><li>深入了解銘凡N5Pro這款破格的NAS/伺服器，結合了旗艦級處理器與企業級擴充性。</li><li>掌握銘凡N5Pro在硬體設計上的獨特之處，包括其模組化主機板、多M.2插槽、ECC記憶體支援及U.2轉接板等高階配置。</li><li>探索銘凡N5Pro在軟體與使用情境上的多樣可能性，從內建系統到第三方虛擬化平台，滿足高性能專業用戶的多元需求。</li></ul><hr /><h1>摘要</h1><p>作者開篇介紹了銘凡N5Pro，一款外型看似傳統五盤位NAS的產品，其搭載的卻是旗艦級迷你主機才會採用的AI9 HX370處理器。這種「逆天」的配置，讓作者提出了新的視角：若將N5Pro視為一台伺服器或「ALL IN ONE」載體，HX370處理器便顯得合理許多。這明確指出N5Pro的定位是為有高性能需求的專業用戶或工作室而設計。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_0.jpg" /></p><p>N5Pro完美繼承了銘凡MS-01的<strong>高擴充性</strong>，兼容各種企業級SSD，並支援外接與內建顯示卡，其本質上可視為在NAS機殼內塞入了一台MS-01，擁有傳統NAS難以企及的性能釋放與可玩性。作者預告將從硬體設計和軟體兩方面深入評測這款「劍走偏鋒」的產品。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_30.jpg" /></p><h2>硬體設計與擴充性</h2><p>銘凡N5Pro的外殼採用了<strong>CNC一體成型工藝</strong>與陽極氧化處理，鋁合金側邊搭配前後塑料板，整體做工精細。機身正面設有五個3.5吋硬碟倉、電源鍵、狀態指示燈、以及支援8K@60Hz視訊輸出的USB4與USB3.2 Gen2接口。硬碟托架可安裝3.5吋或2.5吋硬碟/固態硬碟，並隨機附贈一塊可遮蔽硬碟倉的面板以提升美觀。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_60.jpg" /></p><p>機身背面配有兩個9025大風扇、防盜鎖扣、另一個USB4接口、一個HDMI2.1接口（作者口誤，應為支援8K輸出的視訊接口）、以及NAS中罕見的<strong>OcuLink接口</strong>用於外接顯示卡。此外，還有一個USB3.2 Gen2接口、一個10GbE和一個5GbE的有線網口、USB2.0接口和DC電源接口。下方為主機板和固態硬碟設計了獨立的散熱出風口，並預留了內建顯示卡或其他PCIE設備的I/O面板位置。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_120.jpg" /></p><p>N5Pro的內部設計極具特色，卸下底部兩顆螺絲後，主機板可<strong>直接抽出</strong>，採用模組化設計。主機板與機身之間僅靠金手指完成所有數據傳輸和供電，無排線連接。主機板正面支援三條最長22110尺寸的<strong>PCIE4.0 M.2固態硬碟</strong>，並為固態硬碟配備了獨立散熱風扇。預裝一條金士頓1TB PCIE4.0 M.2固態和一條128G PCIE3.0 M.2固態（用於MinisCloud OS系統）。一個USB3.2 Gen2內置接口專供引導U盤使用，不占用外部I/O，設計巧妙。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_165.jpg" /></p><p>N5Pro的配件中還附贈一塊轉接板，可將三條M.2轉換為兩塊<strong>U.2</strong>和一條M.2，且U.2供電已整合至板上，無需獨立接線，充分展現了對企業級產品的深入理解。主機板背面則有巨大的散熱模組壓制HX370處理器，並預留一個PCIE插槽，可安裝刀卡或萬兆網卡等。下方為兩條<strong>DDR5 5600Mhz記憶體插槽</strong>，最高支援96G容量的<strong>ECC記憶體</strong>，提供更穩定的運作。預裝兩條金士頓16G 5600Mhz記憶體。作者總結，N5Pro的擴充性已達到極致，特別是對企業級產品的兼容性，使其在NAS領域獨樹一幟，為專業玩家提供了極大的DIY操作空間。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_230.jpg" /></p><h2>軟體與應用情境</h2><p>與一般硬體廠商不同，銘凡N5Pro內建了名為<strong>MinisCloud OS</strong>的系統。作者指出該系統完成度意外地不錯，包含影音庫、相簿、下載、Docker、虛擬機乃至內網穿透等功能，具備實用性，但功能與易用性仍有完善空間。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_285.jpg" /></p><p>作者推薦了兩種高性能使用方向。第一種是將<strong>飛牛FnOS</strong>作為底層系統。若無軟路由需求，可在FnOS的虛擬機中運行其他系統，FnOS支援<strong>硬體直通</strong>。玩家可安裝Windows虛擬機並將核顯直通給它以遊玩遊戲（犧牲FnOS硬解性能），或直接加裝刀卡，將刀卡直通給虛擬機，核顯留給FnOS，實現硬解與遊戲兼顧，將N5Pro作為NAS兼串流伺服器使用。不過，飛牛FnOS的網絡結構不允許將多個實體網口橋接用於軟路由。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_345.jpg" /></p><p>第二種玩法是直接安裝PVE或UNRAID等<strong>虛擬化系統</strong>。此方法的優點是能更好地利用多網口和機器性能，實現<strong>ALL IN BOOM</strong>軟路由系統，但上手門檻和故障排除難度較高。在PVE中，可將整個SATA控制器直通給FnOS虛擬機，獲得接近原生FnOS的硬碟插拔體驗，也可將核顯或獨顯直通給虛擬機作為遊戲伺服器。作者甚至嘗試在PVE上運行銘凡自帶的MinisCloud OS，但未能成功。值得注意的是，無論是FnOS還是PVE作為底層，目前都無法識別OcuLink外接顯示卡，這對實現雙系統雙遊戲伺服器的想法是一大遺憾。作者總結，N5Pro在軟體應用上能限制我們的只有想像力，是一台非常適合折騰的機器。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_6.jpg" /></p><h2>結論</h2><p>作者總結銘凡N5Pro與前作MS-01一樣，都是銘凡公司「激進」卻總能「直戳專業玩家的心」的產品。N5Pro是一台<strong>性能管夠、擴充性拉滿</strong>的機器。作者最後詢問觀眾，在國補後4999人民幣的價格下，是否能接受這款產品。影片由莫老師製作，期待下期再見。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_7.jpg" /></p><hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">这。是铭凡N5Pro。看这造型。它肯定是一台NAS对吧。5个盘位。但你能想象吗。它的处理器。居然用了旗舰迷你主机上。才会上的AI9 HX370。一台NAS。用HX370。就。挺逆天的。但反过来想。如果我不把它当成一台NAS。而是作为一台服务器。ALL IN ONE的载体。诶。用HX370是不是就合理多了。所以这台机器的定位。很明显就是给那些有高性能需求的。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">专业用户或者工作室的。它完美继承了来自铭凡。MS-01的高拓展性。兼容各种企业级SSD。支持外接和内置显卡。啊。极其炸裂。甚至都不能说是继承。它就是在NAS中。塞了一台MS-01进去。拥有传统NAS难以企及的。性能释放和可玩性。总之。这又是一台剑走偏锋的产品。和传统的成品NAS。有很多很多的不同之处。所以今天。我将会从硬件设计。和软件两个方面。带你来完整看看这台铭凡N5Pro。到底怎么样。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_64.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">铭凡N5Pro的外壳采用了。CNC一体成型工艺。阳极氧化处理。这四边是铝合金的。前后为塑料。整体做工还不错。缝隙处理得都比较细致。机身正面是5个3.5寸硬盘仓。电源键。状态指示灯。USB4. 及USB3.2Gen2接口。这个USB4是支持视频输出的。最高8K@60Hz。掏出硬盘托架。可以装入3.5寸机械硬盘。和2.5寸机械或固态硬盘。它这个快拆卡扣比较紧。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第一次可能得用东西撬才能取下来。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">硬盘仓后边的PCB观感。挺工整。随机有配一块面板。可以把前边的硬盘仓遮住。这样看起来更美观一点。来看机器背部。上方是两个9025的大风扇。下方则分别有一个防盗锁扣。同样支持8K@60Hz输出的。USB4接口。一个HDMI2.1接口(口误)。OcuLink接口。可以外接显卡。用在NAS中还真是少见。一个USB3.2Gen2接口。两个有线网口。一个是10GbE的。另一个是5GbE的。USB2.0接口。以及一个19V的DC电源接口。下方有为主板和。固态硬盘单独做一个散热出风口。旁边还预留了内置显卡。或其它PCIE设备的。I/O面板位置。通常来说。一台可以拓展内部存储的NAS。都会在底部预留一个仓位。来让用户更换内存和固态。但铭凡不一样。在卸下底部的两颗螺丝后。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">它是直接可以整个抽出主板的。模块化设计。并且主板和机身没有排线连接。就靠这块金手指。完成所有数据传输和供电。来看主板正面。取下散热。它支持3条最大22110长度的。PCIE4.0 M.2固态。22110啊。垃圾佬狂喜了属于是。由于企业级固态发热大。它还给固态单独做了一个散热风扇。并且散热风扇跟固态间留有空隙。带马甲的固态也插得进去。预装了两条固态。一条为金士顿的1TB。PCIE4.0 M.2固态。另一条为128G的。PCIE3.0 M.2固态。应该是用于存放铭凡的。MinisCloud OS系统的。在主板的这个位置。还有一个USB3.2Gen2接口。这个接口是用来插。系统引导U盘的。像群晖。UNRAID这类系统的。引导U盘就可以插这里。不占用外部IO。这个设计还挺有想法的。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">除此之外。N5Pro的配件中还赠送有一块转接板。允许你把3条M.2。转换成2块U.2加一条M.2。并且U.2的供电还。集成到了板子上。不用单独接电源。企业级这块算是被铭凡给玩明白了。我的傲腾终于可以被塞进NAS了。接着来看主板背面。左侧是一块巨大的散热模组。用来压制HX370。右侧则是预留了一块PCIE插槽。允许我们插一张刀卡或者万兆网卡。转接卡之类的。取下散热风扇。下边是两条内存插槽。它最大是支持DDR5 5600Mhz。96G容量的ECC内存。ECC内存相较于传统内存更稳定。更不容易崩溃。预装的是两条金士顿的。16G 5600Mhz内存。整体来看。铭凡N5Pro的确是已经将扩展性。做到了极致。特别是对企业级产品的兼容性。真的是NAS中独一档的存在。这个配置在胜任日常使用之余。还给了我们留下了极大的。DIY操作空间。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">专业玩家狂喜了属于是。接下来来看看。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_244.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">和一般的硬件厂商做NAS不同。铭凡N5Pro它是自带了系统的。名叫MinisCloud OS。并且这个系统的完成度。意外的还不错。有影音库。相册。下载。Docker. 虚拟机。甚至内网穿透。啊。它是真的能用。只不过功能和易用性上。可能还需要继续完善。鉴于这台机器性能这么强。这里推荐两个方向的食用方法。一个是装飞牛FnOS。如果没有软路由方面的需求。那么用飞牛FnOS来作为底层。再在飞牛FnOS的虚拟机里。跑上一些系统是一个不错的选择。飞牛FnOS的虚拟机支持硬件直通。所以想玩游戏的小伙伴。也可以装一个Windows。然后把核显直通给Windows虚拟机。不过这会牺牲。飞牛FnOS的硬解性能。啊当然。由于HX370的CPU算力很猛。即使软解转码。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">它也不带卡的。不过小孩子才做选择。大人可以选择全都要对吧。给N5Pro插上一张刀卡。然后把刀卡直通给虚拟机。核显留给飞牛FnOS。硬解就很完美了。平时当NAS。想玩游戏就当做串流服务器。很香。只是飞牛FnOS的网络结构。不允许我们将多个物理网口。桥接在一起做软路由。接着来说另一种玩法。就是直接安装PVE。或UNRAID这类虚拟机系统。好处就是可以更好的利用。多个网口和机器的性能。安装软路由系统。实现ALL IN BOOM。坏处就是上手门槛比飞牛FnOS更高。并且炸了之后。抢救起来比飞牛FnOS更困难。在PVE中安装飞牛FnOS后。可以把整个SATA管理器直通给它。这样插拔机械硬盘的体验。基本就跟原生飞牛FnOS接近了。也可以将核显或独显。直通给虚拟机。以获得更好的游戏性能。作为游戏服务器来用。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">甚至。我还在PVE上尝试过。把铭凡自带的MinisCloud OS系统。扔进虚拟机里运行。不过很可惜。开机会提示找不到内核。还有一点。不管是飞牛FnOS做底层。还是PVE做底层。我发现它们都是没办法识别。OcuLink外接显卡的。这个还是挺遗憾的。不然就能实现双系统。双游戏服务器了。总的来说。N5Pro在软件这块。能限制我们的只有想象力。它真的是一台非常适合折腾的机器。那么总结一下。前有MS-01。后有N5Pro。铭凡的产品很激进。却又总能直戳专业玩家的心。N5Pro是一台性能管够。拓展性拉满的机器。不知道国补后4999的价格。你能否接受呢。那好吧。本期视频就到这里。我是莫老师。我们下期视频见。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=wwopW2IYv4o">https://www.youtube.com/watch?v=wwopW2IYv4o</a></p><p>铭凡N5Pro是一台设计非常激进的NAS产品，它的超强性能和拓展性在给予DIY玩家足够可能性的同时，也注定会有一定争议，你觉得呢</p><p></p><p>------------------------------------------------------</p><p></p><p>Music from #Uppbeat (free for Creators!):</p><p><a href="https://uppbeat.io/t/kidcut/jazz-and-hop">https://uppbeat.io/t/kidcut/jazz-and-hop</a></p><p>License code: 9OVFJVNPRSHYUBQQ</p><p></p><p>Music from #Uppbeat (free for Creators!):</p><p><a href="https://uppbeat.io/t/mountaineer/juciest">https://uppbeat.io/t/mountaineer/juciest</a></p><p>License code: OMQMVLVHGBLADCHF</p><p></p><p>Music from #Uppbeat (free for Creators!):</p><p><a href="https://uppbeat.io/t/moire/new-life">https://uppbeat.io/t/moire/new-life</a></p><p>License code: DFUTWWQSBS0L1HXD</p><p></p><p>Music from #Uppbeat (free for Creators!):</p><p><a href="https://uppbeat.io/t/moire/old-town">https://uppbeat.io/t/moire/old-town</a></p><p>License code: 9QQ2VG3VHUN0XXXQ</p>]]>
      </description>
      <content:encoded><![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://img.youtube.com/vi/wwopW2IYv4o/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=wwopW2IYv4o">https://www.youtube.com/watch?v=wwopW2IYv4o</a></p><h1>值得閱讀的理由</h1><ul><li>深入了解銘凡N5Pro這款破格的NAS/伺服器，結合了旗艦級處理器與企業級擴充性。</li><li>掌握銘凡N5Pro在硬體設計上的獨特之處，包括其模組化主機板、多M.2插槽、ECC記憶體支援及U.2轉接板等高階配置。</li><li>探索銘凡N5Pro在軟體與使用情境上的多樣可能性，從內建系統到第三方虛擬化平台，滿足高性能專業用戶的多元需求。</li></ul><hr /><h1>摘要</h1><p>作者開篇介紹了銘凡N5Pro，一款外型看似傳統五盤位NAS的產品，其搭載的卻是旗艦級迷你主機才會採用的AI9 HX370處理器。這種「逆天」的配置，讓作者提出了新的視角：若將N5Pro視為一台伺服器或「ALL IN ONE」載體，HX370處理器便顯得合理許多。這明確指出N5Pro的定位是為有高性能需求的專業用戶或工作室而設計。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_0.jpg" /></p><p>N5Pro完美繼承了銘凡MS-01的<strong>高擴充性</strong>，兼容各種企業級SSD，並支援外接與內建顯示卡，其本質上可視為在NAS機殼內塞入了一台MS-01，擁有傳統NAS難以企及的性能釋放與可玩性。作者預告將從硬體設計和軟體兩方面深入評測這款「劍走偏鋒」的產品。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_30.jpg" /></p><h2>硬體設計與擴充性</h2><p>銘凡N5Pro的外殼採用了<strong>CNC一體成型工藝</strong>與陽極氧化處理，鋁合金側邊搭配前後塑料板，整體做工精細。機身正面設有五個3.5吋硬碟倉、電源鍵、狀態指示燈、以及支援8K@60Hz視訊輸出的USB4與USB3.2 Gen2接口。硬碟托架可安裝3.5吋或2.5吋硬碟/固態硬碟，並隨機附贈一塊可遮蔽硬碟倉的面板以提升美觀。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_60.jpg" /></p><p>機身背面配有兩個9025大風扇、防盜鎖扣、另一個USB4接口、一個HDMI2.1接口（作者口誤，應為支援8K輸出的視訊接口）、以及NAS中罕見的<strong>OcuLink接口</strong>用於外接顯示卡。此外，還有一個USB3.2 Gen2接口、一個10GbE和一個5GbE的有線網口、USB2.0接口和DC電源接口。下方為主機板和固態硬碟設計了獨立的散熱出風口，並預留了內建顯示卡或其他PCIE設備的I/O面板位置。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_120.jpg" /></p><p>N5Pro的內部設計極具特色，卸下底部兩顆螺絲後，主機板可<strong>直接抽出</strong>，採用模組化設計。主機板與機身之間僅靠金手指完成所有數據傳輸和供電，無排線連接。主機板正面支援三條最長22110尺寸的<strong>PCIE4.0 M.2固態硬碟</strong>，並為固態硬碟配備了獨立散熱風扇。預裝一條金士頓1TB PCIE4.0 M.2固態和一條128G PCIE3.0 M.2固態（用於MinisCloud OS系統）。一個USB3.2 Gen2內置接口專供引導U盤使用，不占用外部I/O，設計巧妙。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_165.jpg" /></p><p>N5Pro的配件中還附贈一塊轉接板，可將三條M.2轉換為兩塊<strong>U.2</strong>和一條M.2，且U.2供電已整合至板上，無需獨立接線，充分展現了對企業級產品的深入理解。主機板背面則有巨大的散熱模組壓制HX370處理器，並預留一個PCIE插槽，可安裝刀卡或萬兆網卡等。下方為兩條<strong>DDR5 5600Mhz記憶體插槽</strong>，最高支援96G容量的<strong>ECC記憶體</strong>，提供更穩定的運作。預裝兩條金士頓16G 5600Mhz記憶體。作者總結，N5Pro的擴充性已達到極致，特別是對企業級產品的兼容性，使其在NAS領域獨樹一幟，為專業玩家提供了極大的DIY操作空間。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_230.jpg" /></p><h2>軟體與應用情境</h2><p>與一般硬體廠商不同，銘凡N5Pro內建了名為<strong>MinisCloud OS</strong>的系統。作者指出該系統完成度意外地不錯，包含影音庫、相簿、下載、Docker、虛擬機乃至內網穿透等功能，具備實用性，但功能與易用性仍有完善空間。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_285.jpg" /></p><p>作者推薦了兩種高性能使用方向。第一種是將<strong>飛牛FnOS</strong>作為底層系統。若無軟路由需求，可在FnOS的虛擬機中運行其他系統，FnOS支援<strong>硬體直通</strong>。玩家可安裝Windows虛擬機並將核顯直通給它以遊玩遊戲（犧牲FnOS硬解性能），或直接加裝刀卡，將刀卡直通給虛擬機，核顯留給FnOS，實現硬解與遊戲兼顧，將N5Pro作為NAS兼串流伺服器使用。不過，飛牛FnOS的網絡結構不允許將多個實體網口橋接用於軟路由。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_345.jpg" /></p><p>第二種玩法是直接安裝PVE或UNRAID等<strong>虛擬化系統</strong>。此方法的優點是能更好地利用多網口和機器性能，實現<strong>ALL IN BOOM</strong>軟路由系統，但上手門檻和故障排除難度較高。在PVE中，可將整個SATA控制器直通給FnOS虛擬機，獲得接近原生FnOS的硬碟插拔體驗，也可將核顯或獨顯直通給虛擬機作為遊戲伺服器。作者甚至嘗試在PVE上運行銘凡自帶的MinisCloud OS，但未能成功。值得注意的是，無論是FnOS還是PVE作為底層，目前都無法識別OcuLink外接顯示卡，這對實現雙系統雙遊戲伺服器的想法是一大遺憾。作者總結，N5Pro在軟體應用上能限制我們的只有想像力，是一台非常適合折騰的機器。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_6.jpg" /></p><h2>結論</h2><p>作者總結銘凡N5Pro與前作MS-01一樣，都是銘凡公司「激進」卻總能「直戳專業玩家的心」的產品。N5Pro是一台<strong>性能管夠、擴充性拉滿</strong>的機器。作者最後詢問觀眾，在國補後4999人民幣的價格下，是否能接受這款產品。影片由莫老師製作，期待下期再見。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_7.jpg" /></p><hr /><hr />================================================</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">这。是铭凡N5Pro。看这造型。它肯定是一台NAS对吧。5个盘位。但你能想象吗。它的处理器。居然用了旗舰迷你主机上。才会上的AI9 HX370。一台NAS。用HX370。就。挺逆天的。但反过来想。如果我不把它当成一台NAS。而是作为一台服务器。ALL IN ONE的载体。诶。用HX370是不是就合理多了。所以这台机器的定位。很明显就是给那些有高性能需求的。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">专业用户或者工作室的。它完美继承了来自铭凡。MS-01的高拓展性。兼容各种企业级SSD。支持外接和内置显卡。啊。极其炸裂。甚至都不能说是继承。它就是在NAS中。塞了一台MS-01进去。拥有传统NAS难以企及的。性能释放和可玩性。总之。这又是一台剑走偏锋的产品。和传统的成品NAS。有很多很多的不同之处。所以今天。我将会从硬件设计。和软件两个方面。带你来完整看看这台铭凡N5Pro。到底怎么样。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_64.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">首先是。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">铭凡N5Pro的外壳采用了。CNC一体成型工艺。阳极氧化处理。这四边是铝合金的。前后为塑料。整体做工还不错。缝隙处理得都比较细致。机身正面是5个3.5寸硬盘仓。电源键。状态指示灯。USB4. 及USB3.2Gen2接口。这个USB4是支持视频输出的。最高8K@60Hz。掏出硬盘托架。可以装入3.5寸机械硬盘。和2.5寸机械或固态硬盘。它这个快拆卡扣比较紧。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">第一次可能得用东西撬才能取下来。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">硬盘仓后边的PCB观感。挺工整。随机有配一块面板。可以把前边的硬盘仓遮住。这样看起来更美观一点。来看机器背部。上方是两个9025的大风扇。下方则分别有一个防盗锁扣。同样支持8K@60Hz输出的。USB4接口。一个HDMI2.1接口(口误)。OcuLink接口。可以外接显卡。用在NAS中还真是少见。一个USB3.2Gen2接口。两个有线网口。一个是10GbE的。另一个是5GbE的。USB2.0接口。以及一个19V的DC电源接口。下方有为主板和。固态硬盘单独做一个散热出风口。旁边还预留了内置显卡。或其它PCIE设备的。I/O面板位置。通常来说。一台可以拓展内部存储的NAS。都会在底部预留一个仓位。来让用户更换内存和固态。但铭凡不一样。在卸下底部的两颗螺丝后。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">它是直接可以整个抽出主板的。模块化设计。并且主板和机身没有排线连接。就靠这块金手指。完成所有数据传输和供电。来看主板正面。取下散热。它支持3条最大22110长度的。PCIE4.0 M.2固态。22110啊。垃圾佬狂喜了属于是。由于企业级固态发热大。它还给固态单独做了一个散热风扇。并且散热风扇跟固态间留有空隙。带马甲的固态也插得进去。预装了两条固态。一条为金士顿的1TB。PCIE4.0 M.2固态。另一条为128G的。PCIE3.0 M.2固态。应该是用于存放铭凡的。MinisCloud OS系统的。在主板的这个位置。还有一个USB3.2Gen2接口。这个接口是用来插。系统引导U盘的。像群晖。UNRAID这类系统的。引导U盘就可以插这里。不占用外部IO。这个设计还挺有想法的。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">除此之外。N5Pro的配件中还赠送有一块转接板。允许你把3条M.2。转换成2块U.2加一条M.2。并且U.2的供电还。集成到了板子上。不用单独接电源。企业级这块算是被铭凡给玩明白了。我的傲腾终于可以被塞进NAS了。接着来看主板背面。左侧是一块巨大的散热模组。用来压制HX370。右侧则是预留了一块PCIE插槽。允许我们插一张刀卡或者万兆网卡。转接卡之类的。取下散热风扇。下边是两条内存插槽。它最大是支持DDR5 5600Mhz。96G容量的ECC内存。ECC内存相较于传统内存更稳定。更不容易崩溃。预装的是两条金士顿的。16G 5600Mhz内存。整体来看。铭凡N5Pro的确是已经将扩展性。做到了极致。特别是对企业级产品的兼容性。真的是NAS中独一档的存在。这个配置在胜任日常使用之余。还给了我们留下了极大的。DIY操作空间。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">专业玩家狂喜了属于是。接下来来看看。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/wwopW2IYv4o_244.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">和一般的硬件厂商做NAS不同。铭凡N5Pro它是自带了系统的。名叫MinisCloud OS。并且这个系统的完成度。意外的还不错。有影音库。相册。下载。Docker. 虚拟机。甚至内网穿透。啊。它是真的能用。只不过功能和易用性上。可能还需要继续完善。鉴于这台机器性能这么强。这里推荐两个方向的食用方法。一个是装飞牛FnOS。如果没有软路由方面的需求。那么用飞牛FnOS来作为底层。再在飞牛FnOS的虚拟机里。跑上一些系统是一个不错的选择。飞牛FnOS的虚拟机支持硬件直通。所以想玩游戏的小伙伴。也可以装一个Windows。然后把核显直通给Windows虚拟机。不过这会牺牲。飞牛FnOS的硬解性能。啊当然。由于HX370的CPU算力很猛。即使软解转码。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">它也不带卡的。不过小孩子才做选择。大人可以选择全都要对吧。给N5Pro插上一张刀卡。然后把刀卡直通给虚拟机。核显留给飞牛FnOS。硬解就很完美了。平时当NAS。想玩游戏就当做串流服务器。很香。只是飞牛FnOS的网络结构。不允许我们将多个物理网口。桥接在一起做软路由。接着来说另一种玩法。就是直接安装PVE。或UNRAID这类虚拟机系统。好处就是可以更好的利用。多个网口和机器的性能。安装软路由系统。实现ALL IN BOOM。坏处就是上手门槛比飞牛FnOS更高。并且炸了之后。抢救起来比飞牛FnOS更困难。在PVE中安装飞牛FnOS后。可以把整个SATA管理器直通给它。这样插拔机械硬盘的体验。基本就跟原生飞牛FnOS接近了。也可以将核显或独显。直通给虚拟机。以获得更好的游戏性能。作为游戏服务器来用。</p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; ">甚至。我还在PVE上尝试过。把铭凡自带的MinisCloud OS系统。扔进虚拟机里运行。不过很可惜。开机会提示找不到内核。还有一点。不管是飞牛FnOS做底层。还是PVE做底层。我发现它们都是没办法识别。OcuLink外接显卡的。这个还是挺遗憾的。不然就能实现双系统。双游戏服务器了。总的来说。N5Pro在软件这块。能限制我们的只有想象力。它真的是一台非常适合折腾的机器。那么总结一下。前有MS-01。后有N5Pro。铭凡的产品很激进。却又总能直戳专业玩家的心。N5Pro是一台性能管够。拓展性拉满的机器。不知道国补后4999的价格。你能否接受呢。那好吧。本期视频就到这里。我是莫老师。我们下期视频见。</p>

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=wwopW2IYv4o">https://www.youtube.com/watch?v=wwopW2IYv4o</a></p><p>铭凡N5Pro是一台设计非常激进的NAS产品，它的超强性能和拓展性在给予DIY玩家足够可能性的同时，也注定会有一定争议，你觉得呢</p><p></p><p>------------------------------------------------------</p><p></p><p>Music from #Uppbeat (free for Creators!):</p><p><a href="https://uppbeat.io/t/kidcut/jazz-and-hop">https://uppbeat.io/t/kidcut/jazz-and-hop</a></p><p>License code: 9OVFJVNPRSHYUBQQ</p><p></p><p>Music from #Uppbeat (free for Creators!):</p><p><a href="https://uppbeat.io/t/mountaineer/juciest">https://uppbeat.io/t/mountaineer/juciest</a></p><p>License code: OMQMVLVHGBLADCHF</p><p></p><p>Music from #Uppbeat (free for Creators!):</p><p><a href="https://uppbeat.io/t/moire/new-life">https://uppbeat.io/t/moire/new-life</a></p><p>License code: DFUTWWQSBS0L1HXD</p><p></p><p>Music from #Uppbeat (free for Creators!):</p><p><a href="https://uppbeat.io/t/moire/old-town">https://uppbeat.io/t/moire/old-town</a></p><p>License code: 9QQ2VG3VHUN0XXXQ</p>]]></content:encoded>
      <itunes:image href="https://i.ytimg.com/vi/wwopW2IYv4o/hqdefault.jpg"/>
      <pubDate>2025-08-22T08:26:18.000Z</pubDate>
    </item><item>
      <title><![CDATA[在Arm设备上同时跑5个系统？PVE Arm搭建使用指北]]></title>
      <link>https://www.youtube.com/watch?v=fg7ggEQLEaw</link>
      <itunes:title><![CDATA[在Arm设备上同时跑5个系统？PVE Arm搭建使用指北]]></itunes:title>
      <itunes:author><![CDATA[在下莫老师]]></itunes:author>
      <itunes:summary>
        <![CDATA[<hr style="clear:both" />

<p><img src="https://img.youtube.com/vi/fg7ggEQLEaw/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=fg7ggEQLEaw">https://www.youtube.com/watch?v=fg7ggEQLEaw</a></p><h1>值得閱讀的理由</h1><ul><li>這份摘要提供在 <strong>Arm 設備</strong>（特別是 <strong>OECT</strong>）上安裝 <strong>Proxmox VE (PVE)</strong> 的完整指南，涵蓋從硬體準備到軟體配置的每一個步驟。</li><li>詳細介紹了三種不同的虛擬機建立方式（使用 <strong>ISO 映像</strong>、<strong>IMG 映像轉換</strong>及 <strong>LXC 容器</strong>），並針對 Arm 平台特點提供了專屬的解決方案與注意事項，例如大檔案上傳限制。</li><li>澄清了關於在 Arm 平台 PVE 上運行特定系統（如 <strong>Windows Arm</strong> 或 <strong>群暉 DSM</strong>）的常見誤解，並分享了作者在實作中遇到的網路問題與解決策略，為讀者提供了寶貴的經驗。</li></ul><hr /><h1>摘要</h1><h2>PVE簡介與Arm平台考量</h2><p>作者介紹了開源免費的虛擬化平台 <strong>Proxmox VE (PVE)</strong>，它結合了 QEMU、KVM 和 LXC 技術。雖然 PVE 通常運行於 x86 設備，但作者探討了在 <strong>Arm 設備</strong>上安裝 PVE 的可能性，指出目前 Arm 上的 PVE 仍處於探索階段，資料稀少，因此分享了其研究與實作結果。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_20.jpg" /></p><p>影片內容並非一份完整的教程，而是分享作者個人在 Arm 平台 PVE 上的探索過程和結果，包含了安裝、配置及遇到的問題，旨在提供實用的參考資訊。</p><hr /><h2>安裝前準備與韌體刷寫</h2><p>作者展示了如何在 <strong>OECT 設備</strong>上安裝 PVE。準備工作包括一台 OECT、SATA 硬碟、鑷子、瑞芯微驅動程式、刷機工具、專用 <strong>Armbian 固件</strong>、Ubuntu 系統 ISO 映像、ImmortalWRT 系統 IMG 映像以及 MobaXterm 工具。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_66.jpg" /></p><p>首要步驟是將 OECT 拆機，短接主機板上的兩個點（通常在螺絲孔附近），然後使用刷機工具刷寫預整合 PVE 的 Armbian 固件。刷寫過程需要選取正確的韌體檔案，並透過 USB 線連接 OECT。作者強調，此步驟可能需要多次嘗試，直到刷機工具提示成功偵測到 Mask Rom 設備並成功下載韌體為止。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_105.jpg" /></p><hr /><h2>PVE初始設定與介面操作</h2><p>成功刷寫後，作者指導用戶連接 SATA 硬碟、網路線和電源，設備將自動啟動。透過路由器的後台找到 Armbian 設備的 <strong>IP 地址</strong>，然後使用 <strong>MobaXterm</strong> 透過 SSH 登入 Armbian 系統。登入後，建議執行系統和軟體更新，以確保 PVE 環境是最新的。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_240.jpg" /></p><p>接著，在瀏覽器中輸入 Armbian 的 IP 地址加上 8006 埠號，即可進入 PVE 的控制後台。作者提醒，可以在登入介面選擇語言（如繁體中文），並使用預設使用者名稱「root」和密碼「1234」登入 PVE 控制台。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_248.jpg" /></p><hr /><h2>儲存與網路配置</h2><p>進入 PVE 後，首先需要配置網路和啟用 SATA 硬碟。作者詳細說明了如何建立一個 <strong>網橋 (network bridge)</strong> 並將實體網卡 (ETH0) 綁定到該網橋上，這是虛擬機連網的基礎。他提醒，在 OECT 上，網路配置可能會遇到一些潛在問題，需要留意。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_265.jpg" /></p><p>接著，由於 OECT 內建的 <strong>eMMC 儲存空間</strong>（僅 8GB）不足以存放大型系統映像，作者指導用戶將 SATA 硬碟初始化（擦除資料），然後在 PVE 介面中將其格式化並建立一個新的 <strong>目錄 (Directory)</strong> 作為虛擬機的儲存空間。作者建議該目錄的名稱應遵循特定的命名規則，以方便後續的指令操作。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_297.jpg" /></p><hr /><h2>虛擬機建立方式一：ISO映像</h2><p>作者介紹了在 Arm 平台上建立虛擬機的第一種主要方式：使用 <strong>ISO 系統映像</strong>，例如 <strong>Ubuntu Arm 版本</strong>。與 x86 平台不同，Arm 平台不支援透過 PVE 網頁介面上傳大型 ISO 映像，因為這會導致系統分區（eMMC）空間不足而「原地爆炸」。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_354.jpg" /></p><p>因此，用戶必須透過 <strong>SSH 和 MobaXterm</strong> 將 ISO 映像手動上傳到 SATA 儲存空間的指定目錄（例如 `/mnt/pve/sata/template/iso`）。上傳完成後，即可在 PVE 介面中選擇該映像來建立虛擬機，並按一般流程設定虛擬機的硬碟、CPU、記憶體和網路等參數。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_368.jpg" /></p><hr /><h2>虛擬機建立方式二：IMG映像</h2><p>第二種建立虛擬機的方式是使用 <strong>IMG 格式的系統映像</strong>，通常用於 OpenWRT 或 ImmortalWRT 等軟路由系統。由於 PVE 不直接支援 IMG 格式，這種格式的映像需要先轉換為 <strong>QCOW2 格式</strong>才能在 PVE 中使用。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_461.jpg" /></p><p>作者建議利用 <strong>QEMU 虛擬機</strong>自帶的轉換功能。具體操作是先在 PVE 介面中建立一個沒有硬碟的虛擬機，然後透過 SSH 使用 <code>qemu-img convert</code> 命令將上傳的 IMG 檔案轉換為 QCOW2 格式，並將其儲存在虛擬機的磁碟映像目錄中。轉換完成後，再將這個 QCOW2 映像作為硬碟掛載到之前建立的虛擬機上，即可啟動並安裝系統。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_528.jpg" /></p><hr /><h2>虛擬機建立方式三：LXC容器</h2><p>最後一種建立虛擬化環境的方式是使用 <strong>LXC 容器</strong>。LXC 容器類似於 <strong>Docker</strong>，但它運行的是更接近完整系統的環境。作者指出，直接從 PVE 下載 LXC 模板（例如 Ubuntu 模板）可能會失敗，因為預設的下載源在 Arm 平台上可能無法正常運作。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_627.jpg" /></p><p>解決方案是透過 SSH 修改 PVE 的 LXC 容器源為清華大學源（或其他鏡像源）。修改後，即可正常下載模板並在 PVE 介面中建立 LXC 容器，設定其基本資訊、密碼、儲存、CPU、記憶體和網路等參數。LXC 容器的啟動與管理相比虛擬機更輕量級。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_657.jpg" /></p><hr /><h2>常見問題與澄清</h2><p>作者分享了在 Arm 平台 PVE 上遇到的實際問題和一些常見誤解。他提到，透過 ISO 或 IMG 建立的虛擬機可能無法正常連網，但 LXC 容器則沒有此問題。對於此網路問題，目前原因不明。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_720.jpg" /></p><p>此外，Windows Arm 版本在 OECT 上無法成功運行，會在進入系統安裝流程時卡死。作者也澄清了一個常見誤解：網路上流傳的在 OECT PVE 上運行「黑群暉」(Synology DSM) 其實是透過 <strong>LXC 容器</strong>結合 <strong>Docker</strong> 運行 <strong>VDSM</strong> 項目，而不是直接在 PVE 上運行群暉系統。他指出，只要有 KVM 和 Docker 就能運行 VDSM，但 OECT 在運行 VDSM 項目時效率會相當差。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_736.jpg" /></p><p>最後，作者總結了他在 Arm 平台 PVE 上的研究，並鼓勵觀眾在評論區分享任何建議或解決方案。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_770.jpg" /></p><hr />

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=fg7ggEQLEaw">https://www.youtube.com/watch?v=fg7ggEQLEaw</a></p><p>本期编号：EP258</p><p></p><p>莫老师的附件表（快捷键Crtl+F搜索视频标题）：</p><p></p><p>中国：www.在下莫老师.com</p><p>海外：www.zxmls.lol</p><p></p><p>----------------------------------------------------</p><p></p><p>You can click here to download the files</p><p></p><p>www.在下莫老师.com</p><p>www.zxmls.lol</p>]]>
      </itunes:summary>
      <description>
        <![CDATA[<hr style="clear:both" />

<p><img src="https://img.youtube.com/vi/fg7ggEQLEaw/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=fg7ggEQLEaw">https://www.youtube.com/watch?v=fg7ggEQLEaw</a></p><h1>值得閱讀的理由</h1><ul><li>這份摘要提供在 <strong>Arm 設備</strong>（特別是 <strong>OECT</strong>）上安裝 <strong>Proxmox VE (PVE)</strong> 的完整指南，涵蓋從硬體準備到軟體配置的每一個步驟。</li><li>詳細介紹了三種不同的虛擬機建立方式（使用 <strong>ISO 映像</strong>、<strong>IMG 映像轉換</strong>及 <strong>LXC 容器</strong>），並針對 Arm 平台特點提供了專屬的解決方案與注意事項，例如大檔案上傳限制。</li><li>澄清了關於在 Arm 平台 PVE 上運行特定系統（如 <strong>Windows Arm</strong> 或 <strong>群暉 DSM</strong>）的常見誤解，並分享了作者在實作中遇到的網路問題與解決策略，為讀者提供了寶貴的經驗。</li></ul><hr /><h1>摘要</h1><h2>PVE簡介與Arm平台考量</h2><p>作者介紹了開源免費的虛擬化平台 <strong>Proxmox VE (PVE)</strong>，它結合了 QEMU、KVM 和 LXC 技術。雖然 PVE 通常運行於 x86 設備，但作者探討了在 <strong>Arm 設備</strong>上安裝 PVE 的可能性，指出目前 Arm 上的 PVE 仍處於探索階段，資料稀少，因此分享了其研究與實作結果。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_20.jpg" /></p><p>影片內容並非一份完整的教程，而是分享作者個人在 Arm 平台 PVE 上的探索過程和結果，包含了安裝、配置及遇到的問題，旨在提供實用的參考資訊。</p><hr /><h2>安裝前準備與韌體刷寫</h2><p>作者展示了如何在 <strong>OECT 設備</strong>上安裝 PVE。準備工作包括一台 OECT、SATA 硬碟、鑷子、瑞芯微驅動程式、刷機工具、專用 <strong>Armbian 固件</strong>、Ubuntu 系統 ISO 映像、ImmortalWRT 系統 IMG 映像以及 MobaXterm 工具。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_66.jpg" /></p><p>首要步驟是將 OECT 拆機，短接主機板上的兩個點（通常在螺絲孔附近），然後使用刷機工具刷寫預整合 PVE 的 Armbian 固件。刷寫過程需要選取正確的韌體檔案，並透過 USB 線連接 OECT。作者強調，此步驟可能需要多次嘗試，直到刷機工具提示成功偵測到 Mask Rom 設備並成功下載韌體為止。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_105.jpg" /></p><hr /><h2>PVE初始設定與介面操作</h2><p>成功刷寫後，作者指導用戶連接 SATA 硬碟、網路線和電源，設備將自動啟動。透過路由器的後台找到 Armbian 設備的 <strong>IP 地址</strong>，然後使用 <strong>MobaXterm</strong> 透過 SSH 登入 Armbian 系統。登入後，建議執行系統和軟體更新，以確保 PVE 環境是最新的。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_240.jpg" /></p><p>接著，在瀏覽器中輸入 Armbian 的 IP 地址加上 8006 埠號，即可進入 PVE 的控制後台。作者提醒，可以在登入介面選擇語言（如繁體中文），並使用預設使用者名稱「root」和密碼「1234」登入 PVE 控制台。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_248.jpg" /></p><hr /><h2>儲存與網路配置</h2><p>進入 PVE 後，首先需要配置網路和啟用 SATA 硬碟。作者詳細說明了如何建立一個 <strong>網橋 (network bridge)</strong> 並將實體網卡 (ETH0) 綁定到該網橋上，這是虛擬機連網的基礎。他提醒，在 OECT 上，網路配置可能會遇到一些潛在問題，需要留意。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_265.jpg" /></p><p>接著，由於 OECT 內建的 <strong>eMMC 儲存空間</strong>（僅 8GB）不足以存放大型系統映像，作者指導用戶將 SATA 硬碟初始化（擦除資料），然後在 PVE 介面中將其格式化並建立一個新的 <strong>目錄 (Directory)</strong> 作為虛擬機的儲存空間。作者建議該目錄的名稱應遵循特定的命名規則，以方便後續的指令操作。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_297.jpg" /></p><hr /><h2>虛擬機建立方式一：ISO映像</h2><p>作者介紹了在 Arm 平台上建立虛擬機的第一種主要方式：使用 <strong>ISO 系統映像</strong>，例如 <strong>Ubuntu Arm 版本</strong>。與 x86 平台不同，Arm 平台不支援透過 PVE 網頁介面上傳大型 ISO 映像，因為這會導致系統分區（eMMC）空間不足而「原地爆炸」。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_354.jpg" /></p><p>因此，用戶必須透過 <strong>SSH 和 MobaXterm</strong> 將 ISO 映像手動上傳到 SATA 儲存空間的指定目錄（例如 `/mnt/pve/sata/template/iso`）。上傳完成後，即可在 PVE 介面中選擇該映像來建立虛擬機，並按一般流程設定虛擬機的硬碟、CPU、記憶體和網路等參數。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_368.jpg" /></p><hr /><h2>虛擬機建立方式二：IMG映像</h2><p>第二種建立虛擬機的方式是使用 <strong>IMG 格式的系統映像</strong>，通常用於 OpenWRT 或 ImmortalWRT 等軟路由系統。由於 PVE 不直接支援 IMG 格式，這種格式的映像需要先轉換為 <strong>QCOW2 格式</strong>才能在 PVE 中使用。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_461.jpg" /></p><p>作者建議利用 <strong>QEMU 虛擬機</strong>自帶的轉換功能。具體操作是先在 PVE 介面中建立一個沒有硬碟的虛擬機，然後透過 SSH 使用 <code>qemu-img convert</code> 命令將上傳的 IMG 檔案轉換為 QCOW2 格式，並將其儲存在虛擬機的磁碟映像目錄中。轉換完成後，再將這個 QCOW2 映像作為硬碟掛載到之前建立的虛擬機上，即可啟動並安裝系統。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_528.jpg" /></p><hr /><h2>虛擬機建立方式三：LXC容器</h2><p>最後一種建立虛擬化環境的方式是使用 <strong>LXC 容器</strong>。LXC 容器類似於 <strong>Docker</strong>，但它運行的是更接近完整系統的環境。作者指出，直接從 PVE 下載 LXC 模板（例如 Ubuntu 模板）可能會失敗，因為預設的下載源在 Arm 平台上可能無法正常運作。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_627.jpg" /></p><p>解決方案是透過 SSH 修改 PVE 的 LXC 容器源為清華大學源（或其他鏡像源）。修改後，即可正常下載模板並在 PVE 介面中建立 LXC 容器，設定其基本資訊、密碼、儲存、CPU、記憶體和網路等參數。LXC 容器的啟動與管理相比虛擬機更輕量級。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_657.jpg" /></p><hr /><h2>常見問題與澄清</h2><p>作者分享了在 Arm 平台 PVE 上遇到的實際問題和一些常見誤解。他提到，透過 ISO 或 IMG 建立的虛擬機可能無法正常連網，但 LXC 容器則沒有此問題。對於此網路問題，目前原因不明。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_720.jpg" /></p><p>此外，Windows Arm 版本在 OECT 上無法成功運行，會在進入系統安裝流程時卡死。作者也澄清了一個常見誤解：網路上流傳的在 OECT PVE 上運行「黑群暉」(Synology DSM) 其實是透過 <strong>LXC 容器</strong>結合 <strong>Docker</strong> 運行 <strong>VDSM</strong> 項目，而不是直接在 PVE 上運行群暉系統。他指出，只要有 KVM 和 Docker 就能運行 VDSM，但 OECT 在運行 VDSM 項目時效率會相當差。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_736.jpg" /></p><p>最後，作者總結了他在 Arm 平台 PVE 上的研究，並鼓勵觀眾在評論區分享任何建議或解決方案。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_770.jpg" /></p><hr />

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=fg7ggEQLEaw">https://www.youtube.com/watch?v=fg7ggEQLEaw</a></p><p>本期编号：EP258</p><p></p><p>莫老师的附件表（快捷键Crtl+F搜索视频标题）：</p><p></p><p>中国：www.在下莫老师.com</p><p>海外：www.zxmls.lol</p><p></p><p>----------------------------------------------------</p><p></p><p>You can click here to download the files</p><p></p><p>www.在下莫老师.com</p><p>www.zxmls.lol</p>]]>
      </description>
      <content:encoded><![CDATA[<hr style="clear:both" />

<p><img src="https://img.youtube.com/vi/fg7ggEQLEaw/maxresdefault.jpg" /></p><p><a href="https://www.youtube.com/watch?v=fg7ggEQLEaw">https://www.youtube.com/watch?v=fg7ggEQLEaw</a></p><h1>值得閱讀的理由</h1><ul><li>這份摘要提供在 <strong>Arm 設備</strong>（特別是 <strong>OECT</strong>）上安裝 <strong>Proxmox VE (PVE)</strong> 的完整指南，涵蓋從硬體準備到軟體配置的每一個步驟。</li><li>詳細介紹了三種不同的虛擬機建立方式（使用 <strong>ISO 映像</strong>、<strong>IMG 映像轉換</strong>及 <strong>LXC 容器</strong>），並針對 Arm 平台特點提供了專屬的解決方案與注意事項，例如大檔案上傳限制。</li><li>澄清了關於在 Arm 平台 PVE 上運行特定系統（如 <strong>Windows Arm</strong> 或 <strong>群暉 DSM</strong>）的常見誤解，並分享了作者在實作中遇到的網路問題與解決策略，為讀者提供了寶貴的經驗。</li></ul><hr /><h1>摘要</h1><h2>PVE簡介與Arm平台考量</h2><p>作者介紹了開源免費的虛擬化平台 <strong>Proxmox VE (PVE)</strong>，它結合了 QEMU、KVM 和 LXC 技術。雖然 PVE 通常運行於 x86 設備，但作者探討了在 <strong>Arm 設備</strong>上安裝 PVE 的可能性，指出目前 Arm 上的 PVE 仍處於探索階段，資料稀少，因此分享了其研究與實作結果。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_20.jpg" /></p><p>影片內容並非一份完整的教程，而是分享作者個人在 Arm 平台 PVE 上的探索過程和結果，包含了安裝、配置及遇到的問題，旨在提供實用的參考資訊。</p><hr /><h2>安裝前準備與韌體刷寫</h2><p>作者展示了如何在 <strong>OECT 設備</strong>上安裝 PVE。準備工作包括一台 OECT、SATA 硬碟、鑷子、瑞芯微驅動程式、刷機工具、專用 <strong>Armbian 固件</strong>、Ubuntu 系統 ISO 映像、ImmortalWRT 系統 IMG 映像以及 MobaXterm 工具。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_66.jpg" /></p><p>首要步驟是將 OECT 拆機，短接主機板上的兩個點（通常在螺絲孔附近），然後使用刷機工具刷寫預整合 PVE 的 Armbian 固件。刷寫過程需要選取正確的韌體檔案，並透過 USB 線連接 OECT。作者強調，此步驟可能需要多次嘗試，直到刷機工具提示成功偵測到 Mask Rom 設備並成功下載韌體為止。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_105.jpg" /></p><hr /><h2>PVE初始設定與介面操作</h2><p>成功刷寫後，作者指導用戶連接 SATA 硬碟、網路線和電源，設備將自動啟動。透過路由器的後台找到 Armbian 設備的 <strong>IP 地址</strong>，然後使用 <strong>MobaXterm</strong> 透過 SSH 登入 Armbian 系統。登入後，建議執行系統和軟體更新，以確保 PVE 環境是最新的。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_240.jpg" /></p><p>接著，在瀏覽器中輸入 Armbian 的 IP 地址加上 8006 埠號，即可進入 PVE 的控制後台。作者提醒，可以在登入介面選擇語言（如繁體中文），並使用預設使用者名稱「root」和密碼「1234」登入 PVE 控制台。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_248.jpg" /></p><hr /><h2>儲存與網路配置</h2><p>進入 PVE 後，首先需要配置網路和啟用 SATA 硬碟。作者詳細說明了如何建立一個 <strong>網橋 (network bridge)</strong> 並將實體網卡 (ETH0) 綁定到該網橋上，這是虛擬機連網的基礎。他提醒，在 OECT 上，網路配置可能會遇到一些潛在問題，需要留意。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_265.jpg" /></p><p>接著，由於 OECT 內建的 <strong>eMMC 儲存空間</strong>（僅 8GB）不足以存放大型系統映像，作者指導用戶將 SATA 硬碟初始化（擦除資料），然後在 PVE 介面中將其格式化並建立一個新的 <strong>目錄 (Directory)</strong> 作為虛擬機的儲存空間。作者建議該目錄的名稱應遵循特定的命名規則，以方便後續的指令操作。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_297.jpg" /></p><hr /><h2>虛擬機建立方式一：ISO映像</h2><p>作者介紹了在 Arm 平台上建立虛擬機的第一種主要方式：使用 <strong>ISO 系統映像</strong>，例如 <strong>Ubuntu Arm 版本</strong>。與 x86 平台不同，Arm 平台不支援透過 PVE 網頁介面上傳大型 ISO 映像，因為這會導致系統分區（eMMC）空間不足而「原地爆炸」。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_354.jpg" /></p><p>因此，用戶必須透過 <strong>SSH 和 MobaXterm</strong> 將 ISO 映像手動上傳到 SATA 儲存空間的指定目錄（例如 `/mnt/pve/sata/template/iso`）。上傳完成後，即可在 PVE 介面中選擇該映像來建立虛擬機，並按一般流程設定虛擬機的硬碟、CPU、記憶體和網路等參數。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_368.jpg" /></p><hr /><h2>虛擬機建立方式二：IMG映像</h2><p>第二種建立虛擬機的方式是使用 <strong>IMG 格式的系統映像</strong>，通常用於 OpenWRT 或 ImmortalWRT 等軟路由系統。由於 PVE 不直接支援 IMG 格式，這種格式的映像需要先轉換為 <strong>QCOW2 格式</strong>才能在 PVE 中使用。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_461.jpg" /></p><p>作者建議利用 <strong>QEMU 虛擬機</strong>自帶的轉換功能。具體操作是先在 PVE 介面中建立一個沒有硬碟的虛擬機，然後透過 SSH 使用 <code>qemu-img convert</code> 命令將上傳的 IMG 檔案轉換為 QCOW2 格式，並將其儲存在虛擬機的磁碟映像目錄中。轉換完成後，再將這個 QCOW2 映像作為硬碟掛載到之前建立的虛擬機上，即可啟動並安裝系統。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_528.jpg" /></p><hr /><h2>虛擬機建立方式三：LXC容器</h2><p>最後一種建立虛擬化環境的方式是使用 <strong>LXC 容器</strong>。LXC 容器類似於 <strong>Docker</strong>，但它運行的是更接近完整系統的環境。作者指出，直接從 PVE 下載 LXC 模板（例如 Ubuntu 模板）可能會失敗，因為預設的下載源在 Arm 平台上可能無法正常運作。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_627.jpg" /></p><p>解決方案是透過 SSH 修改 PVE 的 LXC 容器源為清華大學源（或其他鏡像源）。修改後，即可正常下載模板並在 PVE 介面中建立 LXC 容器，設定其基本資訊、密碼、儲存、CPU、記憶體和網路等參數。LXC 容器的啟動與管理相比虛擬機更輕量級。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_657.jpg" /></p><hr /><h2>常見問題與澄清</h2><p>作者分享了在 Arm 平台 PVE 上遇到的實際問題和一些常見誤解。他提到，透過 ISO 或 IMG 建立的虛擬機可能無法正常連網，但 LXC 容器則沒有此問題。對於此網路問題，目前原因不明。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_720.jpg" /></p><p>此外，Windows Arm 版本在 OECT 上無法成功運行，會在進入系統安裝流程時卡死。作者也澄清了一個常見誤解：網路上流傳的在 OECT PVE 上運行「黑群暉」(Synology DSM) 其實是透過 <strong>LXC 容器</strong>結合 <strong>Docker</strong> 運行 <strong>VDSM</strong> 項目，而不是直接在 PVE 上運行群暉系統。他指出，只要有 KVM 和 Docker 就能運行 VDSM，但 OECT 在運行 VDSM 項目時效率會相當差。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_736.jpg" /></p><p>最後，作者總結了他在 Arm 平台 PVE 上的研究，並鼓勵觀眾在評論區分享任何建議或解決方案。</p><p><img src="https://democwise2016.github.io/action-RSS-UT-Weekly-202502/file-cache/fg7ggEQLEaw_770.jpg" /></p><hr />

<hr style="clear:both" />
=============
<p><a href="https://www.youtube.com/watch?v=fg7ggEQLEaw">https://www.youtube.com/watch?v=fg7ggEQLEaw</a></p><p>本期编号：EP258</p><p></p><p>莫老师的附件表（快捷键Crtl+F搜索视频标题）：</p><p></p><p>中国：www.在下莫老师.com</p><p>海外：www.zxmls.lol</p><p></p><p>----------------------------------------------------</p><p></p><p>You can click here to download the files</p><p></p><p>www.在下莫老师.com</p><p>www.zxmls.lol</p>]]></content:encoded>
      <itunes:image href="https://i.ytimg.com/vi/fg7ggEQLEaw/hqdefault.jpg"/>
      <pubDate>2025-08-01T09:01:04.000Z</pubDate>
    </item></channel>
</rss>